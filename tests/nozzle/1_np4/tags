!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
1	gems_library.f90	/^            1 c = 0.0_rfp ! Cancellation of rv1(l), if l>1 :$/;"	l	subroutine:svdcmp_inv	file:
1	gems_reaction.f90	/^      1 format(A15,1x,A15,3x,A1,I1,A1,I1,2x,A40)$/;"	l	subroutine:read_transport_cea	file:
1	gems_reaction.f90	/^      1 format(A15,2E19.10)$/;"	l	subroutine:read_lennard_jones_potential	file:
1	gems_reaction.f90	/^      1 format(I2)$/;"	l	subroutine:read_NASA_therm	file:
10	gems_disc.f90	/^         10 do j = 1, size(current_cell % scell)$/;"	l	subroutine:reconstruction	file:
10	gems_disc.f90	/^      10 epsi = 1.e-30_rfp$/;"	l	subroutine:barth_limiter	file:
10	gems_geom.f90	/^      10  cells%srf = zero$/;"	l	subroutine:geometry	file:
10	gems_input.f90	/^      10 close(5)$/;"	l	subroutine:initial	file:
10	gems_input.f90	/^      10 format(10I8)$/;"	l	subroutine:output_cell_tecplot_v	file:
10	gems_input.f90	/^      10 print *, ' Nothing read in from gems.bin'$/;"	l	subroutine:read_binary	file:
10	gems_library.f90	/^         10 BJ1 = 1.0D0$/;"	l	subroutine:JY01A	file:
10	gems_library.f90	/^      10 continue$/;"	l	subroutine:spline	file:
10	gems_library.f90	/^      10 nclock = dtime(tarry)$/;"	l	subroutine:timera	file:
10	gems_output.f90	/^      10 format(10I8)$/;"	l	subroutine:output_axisy_surface	file:
10	gems_output.f90	/^      10 format(10I8)$/;"	l	subroutine:output_axisy_tecplot	file:
10	gems_output.f90	/^      10 format(10I8)$/;"	l	subroutine:output_cell_tecplot	file:
10	gems_output.f90	/^      10 format(10I8)$/;"	l	subroutine:output_to_fieldview	file:
10	gems_output.f90	/^      10 format(10I8)$/;"	l	subroutine:output_to_tecplot	file:
10	gems_precon.f90	/^      10 continue$/;"	l	subroutine:precondition_cell	file:
10	gems_reaction.f90	/^         10 print *,' error! Can not find species ',species(i)%name,' in',ljfile$/;"	l	subroutine:read_lennard_jones_potential	file:
10	gems_reaction.f90	/^         10 print *,' error! Can not find species ',species(i)%name,' in',thermfile$/;"	l	subroutine:read_NASA_therm	file:
10	gems_reaction.f90	/^         10 print *,' error! Can not find species ',species(i)%name,' in',tranfile$/;"	l	subroutine:read_transport_cea	file:
10	gems_reaction.f90	/^      10  close(2)$/;"	l	subroutine:init_reaction	file:
10	gems_rptbdb.f90	/^                                                   10 format(10I8)$/;"	l	subroutine:OutputTriCellsToTecplot	file:
100	gems_input.f90	/^            100 continue$/;"	l	subroutine:initial	file:
100	gems_rptbdb.f90	/^                                             100 CONTINUE$/;"	l	subroutine:C2INSD	file:
100	gems_rptbdb.f90	/^                           100 CONTINUE$/;"	l	subroutine:C2PNT	file:
100	gems_rptbdb.f90	/^                        100 Z12(K) = AB * PDL(3, K) + ADBC * PDL(4, K) + CD * PDL(5, K)$/;"	l	subroutine:C1INSD	file:
100	gems_rptbdb.f90	/^         100 CONTINUE$/;"	l	subroutine:C1PNT	file:
15	gems_library.f90	/^         15 CONTINUE$/;"	l	subroutine:JY01A	file:
15	gems_library.f90	/^      15 continue$/;"	l	subroutine:spline	file:
2	gems_library.f90	/^            2 z = w(k)$/;"	l	subroutine:svdcmp_inv	file:
2	gems_reaction.f90	/^      2 format(1x,A1,2F9.2,4E15.8)$/;"	l	subroutine:read_transport_cea	file:
2	gems_reaction.f90	/^      2 format(2F10.3)$/;"	l	subroutine:read_NASA_therm	file:
20	gems_input.f90	/^      20 format(5e20.8)$/;"	l	subroutine:output_cell_tecplot_v	file:
20	gems_library.f90	/^         20 BJ1 = 0.5D0 * X * BJ1$/;"	l	subroutine:JY01A	file:
20	gems_library.f90	/^      20 continue$/;"	l	subroutine:spline	file:
20	gems_output.f90	/^      20  format(5e20.8)$/;"	l	subroutine:output_axisy_surface	file:
20	gems_output.f90	/^      20  format(5e20.8)$/;"	l	subroutine:output_axisy_tecplot	file:
20	gems_output.f90	/^      20  format(5e20.8)$/;"	l	subroutine:output_cell_tecplot	file:
20	gems_output.f90	/^      20  format(5e20.8)$/;"	l	subroutine:output_to_fieldview	file:
20	gems_output.f90	/^      20  format(5e20.8)$/;"	l	subroutine:output_to_tecplot	file:
20	gems_output.f90	/^      20  format(5e20.8)$/;"	l	subroutine:wall_plot	file:
20	gems_rptbdb.f90	/^                                                   20 format(5e20.8)$/;"	l	subroutine:OutputTriCellsToTecplot	file:
200	gems_rptbdb.f90	/^                                                200 CONTINUE$/;"	l	subroutine:C2INSD	file:
22	gems_input.f90	/^            22 backspace(7) !ifile)$/;"	l	subroutine:initial	file:
230	gems_rptbdb.f90	/^                                    230 CONTINUE$/;"	l	subroutine:C2SIDE	file:
25	gems_library.f90	/^         25 CONTINUE$/;"	l	subroutine:JY01A	file:
260	gems_rptbdb.f90	/^                                    260 CONTINUE$/;"	l	subroutine:C2SIDE	file:
260	gems_rptbdb.f90	/^               260 CONTINUE$/;"	l	subroutine:C1SIDE	file:
270	gems_rptbdb.f90	/^                  270 CONTINUE$/;"	l	subroutine:C1SIDE	file:
280	gems_rptbdb.f90	/^                  280 CONTINUE$/;"	l	subroutine:C1SIDE	file:
3	gems_library.f90	/^         3 continue$/;"	l	subroutine:svdcmp_inv	file:
3	gems_reaction.f90	/^      3 FORMAT(5D16.8)$/;"	l	subroutine:read_NASA_therm	file:
30	gems_library.f90	/^         30 BY0 = RP2 * (EC * BJ0 - CS0)$/;"	l	subroutine:JY01A	file:
30	gems_library.f90	/^      30 continue$/;"	l	subroutine:spline	file:
300	gems_rptbdb.f90	/^                                       300 CONTINUE$/;"	l	subroutine:C2SIDE	file:
300	gems_rptbdb.f90	/^                     300 CONTINUE$/;"	l	subroutine:C1SIDE	file:
35	gems_library.f90	/^         35 CONTINUE$/;"	l	subroutine:JY01A	file:
40	gems_library.f90	/^         40 BY1 = RP2 * (EC * BJ1 - 1.0D0\/X - 0.25D0 * X * CS1)$/;"	l	subroutine:JY01A	file:
40	gems_library.f90	/^      40 continue$/;"	l	subroutine:spline	file:
40	gems_rptbdb.f90	/^                                             40 CONTINUE$/;"	l	subroutine:C2INSD	file:
401	gems_main.f90	/^   401 format(a8, i7, a8, e12.4, a8, e12.4) $/;"	l	program:gems_main	file:
45	gems_library.f90	/^         45 Q0 = Q0 + B(K) * X**(-2 * K - 1)$/;"	l	subroutine:JY01A	file:
5	gems_library.f90	/^         5 CONTINUE$/;"	l	subroutine:JY01A	file:
50	gems_library.f90	/^         50 Q1 = Q1 + B1(K) * X**(-2 * K - 1)$/;"	l	subroutine:JY01A	file:
50	gems_library.f90	/^      50 b(1) = (y(2) - y(1))\/(x(2) - x(1))$/;"	l	subroutine:spline	file:
500	gems_rptbdb.f90	/^                                                   500 CONTINUE$/;"	l	subroutine:C2INSD	file:
501	gems_main.f90	/^      501 format (1x, i6, 1x, 20e15.6)$/;"	l	subroutine:check_conv	file:
502	gems_main.f90	/^      502 format (a10, 1x, i6, 1x, 20f15.6)$/;"	l	subroutine:check_conv	file:
503	gems_main.f90	/^      503 format (a10, 1x, i6, 1x, 20f15.6) $/;"	l	subroutine:check_conv	file:
60	gems_rptbdb.f90	/^                              60 CONTINUE$/;"	l	subroutine:C2SIDE	file:
60	gems_rptbdb.f90	/^            60 CONTINUE$/;"	l	subroutine:C1SIDE	file:
91	gems_library.f90	/^      91 format (1x, a8, 1x, 'time = ', e14.7, 1x, 'sec')$/;"	l	subroutine:timera	file:
ACM_684_C1	gems_rptbdb.f90	/^MODULE ACM_684_C1$/;"	m
ACM_684_C2	gems_rptbdb.f90	/^                  MODULE ACM_684_C2$/;"	m
ACM_COF_C1	gems_rptbdb.f90	/^   TYPE ACM_COF_C1$/;"	t	module:RPTBDB_constant
ACM_COF_C2	gems_rptbdb.f90	/^   TYPE ACM_COF_C2$/;"	t	module:RPTBDB_constant
AP	gems_rptbdb.f90	/^         DX(3), DY(3), DX2(3), DY2(3), SL2(3), &$/;"	k	type:ACM_COF_C1
AP	gems_rptbdb.f90	/^         DX(3), DY(3), DX2(3), DY2(3), SL2(3), &$/;"	k	type:ACM_COF_C2
AddNeighNode	gems_rptbdb.f90	/^                                                subroutine AddNeighNode(/;"	s	module:RPTBDB_setup
BP	gems_rptbdb.f90	/^         AP, BP,/;"	k	type:ACM_COF_C1
BP	gems_rptbdb.f90	/^         AP, BP,/;"	k	type:ACM_COF_C2
BndCur	gems_rptbdb.f90	/^      type(SplineSeg) :: BndCur(/;"	k	type:FttRootCell
C1DCO	gems_rptbdb.f90	476;"	c	subroutine:C1SIDE
C1DCO	gems_rptbdb.f90	596;"	c	subroutine:C1INSD
C1HORN	gems_rptbdb.f90	/^                     SUBROUTINE C1HORN(/;"	s	module:ACM_684_C1
C1INSD	gems_rptbdb.f90	/^                  SUBROUTINE C1INSD(/;"	s	module:ACM_684_C1
C1PNT	gems_rptbdb.f90	/^   SUBROUTINE C1PNT(/;"	s	module:ACM_684_C1
C1SIDE	gems_rptbdb.f90	/^      SUBROUTINE C1SIDE(/;"	s	module:ACM_684_C1
C2DCO	gems_rptbdb.f90	863;"	c	subroutine:C2SIDE
C2DCO	gems_rptbdb.f90	968;"	c	subroutine:C2INSD
C2HORN	gems_rptbdb.f90	/^                                                SUBROUTINE C2HORN(/;"	s	module:ACM_684_C2
C2INSD	gems_rptbdb.f90	/^                                    SUBROUTINE C2INSD(/;"	s	module:ACM_684_C2
C2PNT	gems_rptbdb.f90	/^                     SUBROUTINE C2PNT(/;"	s	module:ACM_684_C2
C2SIDE	gems_rptbdb.f90	/^                        SUBROUTINE C2SIDE(/;"	s	module:ACM_684_C2
CP	gems_rptbdb.f90	/^         AP, BP, CP,/;"	k	type:ACM_COF_C1
CP	gems_rptbdb.f90	/^         AP, BP, CP,/;"	k	type:ACM_COF_C2
CellInterp	gems_rptbdb.f90	/^                                                function CellInterp(/;"	f	module:RPTBDB_data_structure
CellInterpPartiallyLinear	gems_rptbdb.f90	/^                                                function CellInterpPartiallyLinear(/;"	f	module:RPTBDB_data_structure
Coriolis_force	gems_source.f90	/^   subroutine Coriolis_force(/;"	s	module:gems_source
CubSplItp	gems_rptbdb.f90	/^                                                function CubSplItp(/;"	f	module:RPTBDB_spline
DP	gems_rptbdb.f90	/^         AP, BP, CP, DP$/;"	k	type:ACM_COF_C1
DP	gems_rptbdb.f90	/^         AP, BP, CP, DP$/;"	k	type:ACM_COF_C2
DX	gems_rptbdb.f90	/^         P11, P12, P13, P14, P21, P22, P23, P31, P32, P41, &$/;"	k	type:ACM_COF_C1
DX	gems_rptbdb.f90	/^         Q45(2), Q11, Q22, Q33, Q44, &$/;"	k	type:ACM_COF_C2
DX2	gems_rptbdb.f90	/^         DX(3), DY(3), DX2(/;"	k	type:ACM_COF_C1
DX2	gems_rptbdb.f90	/^         DX(3), DY(3), DX2(/;"	k	type:ACM_COF_C2
DY	gems_rptbdb.f90	/^         DX(3), DY(/;"	k	type:ACM_COF_C1
DY	gems_rptbdb.f90	/^         DX(3), DY(/;"	k	type:ACM_COF_C2
DY2	gems_rptbdb.f90	/^         DX(3), DY(3), DX2(3), DY2(/;"	k	type:ACM_COF_C1
DY2	gems_rptbdb.f90	/^         DX(3), DY(3), DX2(3), DY2(/;"	k	type:ACM_COF_C2
Darcy_on	gems_type.f90	/^    integer :: Darcy_on,/;"	k	type:solid
Enthalpy_Correction_on	gems_type.f90	/^    integer :: Darcy_on, Thermal_Buoyancy_on, Gravity_on, Enthalpy_Correction_on,/;"	k	type:solid
Evaporation_on	gems_type.f90	/^    integer :: Darcy_on, Thermal_Buoyancy_on, Gravity_on, Enthalpy_Correction_on, Evaporation_on$/;"	k	type:solid
F90	Makefile	/^F90 = mpif90$/;"	m
F90FLAGS	Makefile	/^F90FLAGS = -O2$/;"	m
FALSE	gems_rptbdb.f90	/^   logical, parameter :: FALSE /;"	v	module:RPTBDB_constant
FTT_BACK	gems_rptbdb.f90	/^   integer, parameter :: FTT_FRONT = 5, FTT_BACK /;"	v	module:RPTBDB_constant
FTT_BOTTOM	gems_rptbdb.f90	/^   integer, parameter :: FTT_RIGHT = 1, FTT_LEFT = 2, FTT_TOP = 3, FTT_BOTTOM /;"	v	module:RPTBDB_constant
FTT_BOUNDARY	gems_rptbdb.f90	/^   integer, parameter :: FTT_BOUNDARY /;"	v	module:RPTBDB_constant
FTT_CELLS	gems_rptbdb.f90	/^   integer, parameter :: FTT_CELLS /;"	v	module:RPTBDB_constant
FTT_CELL_IS_LEAF	gems_rptbdb.f90	/^                                                logical function FTT_CELL_IS_LEAF(/;"	f	module:RPTBDB_data_structure
FTT_CELL_IS_ROOT	gems_rptbdb.f90	/^                                                logical function FTT_CELL_IS_ROOT(/;"	f	module:RPTBDB_data_structure
FTT_FINE_COARSE	gems_rptbdb.f90	/^   integer, parameter :: FTT_BOUNDARY = 1, FTT_FINE_FINE = 2, FTT_FINE_COARSE /;"	v	module:RPTBDB_constant
FTT_FINE_FINE	gems_rptbdb.f90	/^   integer, parameter :: FTT_BOUNDARY = 1, FTT_FINE_FINE /;"	v	module:RPTBDB_constant
FTT_FRONT	gems_rptbdb.f90	/^   integer, parameter :: FTT_FRONT /;"	v	module:RPTBDB_constant
FTT_LEFT	gems_rptbdb.f90	/^   integer, parameter :: FTT_RIGHT = 1, FTT_LEFT /;"	v	module:RPTBDB_constant
FTT_MAX_NEW_VERTICES	gems_rptbdb.f90	/^   integer, parameter :: FTT_MAX_NEW_VERTICES /;"	v	module:RPTBDB_constant
FTT_NEIGHBORS	gems_rptbdb.f90	/^   integer, parameter :: FTT_NEIGHBORS /;"	v	module:RPTBDB_constant
FTT_POST_ORDER	gems_rptbdb.f90	/^   integer, parameter :: FTT_PRE_ORDER = 1, FTT_POST_ORDER /;"	v	module:RPTBDB_constant
FTT_PRE_ORDER	gems_rptbdb.f90	/^   integer, parameter :: FTT_PRE_ORDER /;"	v	module:RPTBDB_constant
FTT_RIGHT	gems_rptbdb.f90	/^   integer, parameter :: FTT_RIGHT /;"	v	module:RPTBDB_constant
FTT_TOP	gems_rptbdb.f90	/^   integer, parameter :: FTT_RIGHT = 1, FTT_LEFT = 2, FTT_TOP /;"	v	module:RPTBDB_constant
FTT_VERTICES	gems_rptbdb.f90	/^   integer, parameter :: FTT_VERTICES /;"	v	module:RPTBDB_constant
FttCell	gems_rptbdb.f90	/^   type FttCell$/;"	t	module:RPTBDB_constant
FttCellChildren	gems_rptbdb.f90	/^   type FttCellChildren$/;"	t	module:RPTBDB_constant
FttCellNeighbors	gems_rptbdb.f90	/^   type FttCellNeighbors$/;"	t	module:RPTBDB_constant
FttCellNeighborsEle	gems_rptbdb.f90	/^   type FttCellNeighborsEle$/;"	t	module:RPTBDB_constant
FttOct	gems_rptbdb.f90	/^   type FttOct$/;"	t	module:RPTBDB_constant
FttRootCell	gems_rptbdb.f90	/^   type FttRootCell$/;"	t	module:RPTBDB_constant
FttVector	gems_rptbdb.f90	/^   type FttVector$/;"	t	module:RPTBDB_constant
Gravity_on	gems_type.f90	/^    integer :: Darcy_on, Thermal_Buoyancy_on, Gravity_on,/;"	k	type:solid
JY01A	gems_library.f90	/^   SUBROUTINE JY01A(/;"	s	module:gems_library
LinearInterp	gems_rptbdb.f90	/^                                                function LinearInterp(/;"	f	module:RPTBDB_data_structure
MolWgt	gems_rptbdb.f90	/^      real(rfp) :: MolWgt$/;"	k	type:FttRootCell
Mw	gems_type.f90	/^    real(rfp) :: Mw$/;"	k	type:solid
NodeConnectivity	gems_rptbdb.f90	/^                                                subroutine NodeConnectivity(/;"	s	module:RPTBDB_setup
NumTriCells	gems_rptbdb.f90	/^      integer :: TriGeom, NumTriCells$/;"	k	type:FttCell
OBJS	Makefile	/^OBJS =	gems_bound.o gems_constant.o gems_data.o gems_disc.o gems_fv.o gems_geom.o \\$/;"	m
OrgPos	gems_rptbdb.f90	/^                                                function OrgPos(/;"	f	module:RPTBDB_data_structure
OutputTriCellsToTecplot	gems_rptbdb.f90	/^                                                subroutine OutputTriCellsToTecplot(/;"	s	module:RPTBDB_setup
P0	gems_rptbdb.f90	/^      REAL :: P0(/;"	k	type:ACM_COF_C1
P1	gems_rptbdb.f90	/^      REAL :: P0(3), P1(/;"	k	type:ACM_COF_C1
P11	gems_rptbdb.f90	/^      REAL :: P0(3), P1(3), P2(3), P3(3), P4(3), P5(3), &$/;"	k	type:ACM_COF_C1
P12	gems_rptbdb.f90	/^         P11, P12,/;"	k	type:ACM_COF_C1
P13	gems_rptbdb.f90	/^         P11, P12, P13,/;"	k	type:ACM_COF_C1
P14	gems_rptbdb.f90	/^         P11, P12, P13, P14,/;"	k	type:ACM_COF_C1
P2	gems_rptbdb.f90	/^      REAL :: P0(3), P1(3), P2(/;"	k	type:ACM_COF_C1
P21	gems_rptbdb.f90	/^         P11, P12, P13, P14, P21,/;"	k	type:ACM_COF_C1
P22	gems_rptbdb.f90	/^         P11, P12, P13, P14, P21, P22,/;"	k	type:ACM_COF_C1
P23	gems_rptbdb.f90	/^         P11, P12, P13, P14, P21, P22, P23,/;"	k	type:ACM_COF_C1
P3	gems_rptbdb.f90	/^      REAL :: P0(3), P1(3), P2(3), P3(/;"	k	type:ACM_COF_C1
P31	gems_rptbdb.f90	/^         P11, P12, P13, P14, P21, P22, P23, P31,/;"	k	type:ACM_COF_C1
P32	gems_rptbdb.f90	/^         P11, P12, P13, P14, P21, P22, P23, P31, P32,/;"	k	type:ACM_COF_C1
P4	gems_rptbdb.f90	/^      REAL :: P0(3), P1(3), P2(3), P3(3), P4(/;"	k	type:ACM_COF_C1
P41	gems_rptbdb.f90	/^         P11, P12, P13, P14, P21, P22, P23, P31, P32, P41,/;"	k	type:ACM_COF_C1
P5	gems_rptbdb.f90	/^      REAL :: P0(3), P1(3), P2(3), P3(3), P4(3), P5(/;"	k	type:ACM_COF_C1
PROG	Makefile	/^PROG = gems.exe$/;"	m
Q00	gems_rptbdb.f90	/^      REAL :: Q00(/;"	k	type:ACM_COF_C2
Q01	gems_rptbdb.f90	/^      REAL :: Q00(3), Q01(/;"	k	type:ACM_COF_C2
Q02	gems_rptbdb.f90	/^      REAL :: Q00(3), Q01(3), Q02(/;"	k	type:ACM_COF_C2
Q03	gems_rptbdb.f90	/^      REAL :: Q00(3), Q01(3), Q02(3), Q03(/;"	k	type:ACM_COF_C2
Q04	gems_rptbdb.f90	/^      REAL :: Q00(3), Q01(3), Q02(3), Q03(3), Q04(/;"	k	type:ACM_COF_C2
Q05	gems_rptbdb.f90	/^      REAL :: Q00(3), Q01(3), Q02(3), Q03(3), Q04(3), Q05(/;"	k	type:ACM_COF_C2
Q06	gems_rptbdb.f90	/^      REAL :: Q00(3), Q01(3), Q02(3), Q03(3), Q04(3), Q05(3), &$/;"	k	type:ACM_COF_C2
Q07	gems_rptbdb.f90	/^         Q06(3), Q07(/;"	k	type:ACM_COF_C2
Q08	gems_rptbdb.f90	/^         Q06(3), Q07(3), Q08(/;"	k	type:ACM_COF_C2
Q09	gems_rptbdb.f90	/^         Q06(3), Q07(3), Q08(3), Q09(/;"	k	type:ACM_COF_C2
Q11	gems_rptbdb.f90	/^         Q45(2), Q11,/;"	k	type:ACM_COF_C2
Q12	gems_rptbdb.f90	/^         Q06(3), Q07(3), Q08(3), Q09(3), &$/;"	k	type:ACM_COF_C2
Q13	gems_rptbdb.f90	/^         Q12(2), Q13(/;"	k	type:ACM_COF_C2
Q14	gems_rptbdb.f90	/^         Q12(2), Q13(2), Q14(/;"	k	type:ACM_COF_C2
Q15	gems_rptbdb.f90	/^         Q12(2), Q13(2), Q14(2), Q15(/;"	k	type:ACM_COF_C2
Q16	gems_rptbdb.f90	/^         Q12(2), Q13(2), Q14(2), Q15(2), Q16(/;"	k	type:ACM_COF_C2
Q17	gems_rptbdb.f90	/^         Q12(2), Q13(2), Q14(2), Q15(2), Q16(2), Q17(/;"	k	type:ACM_COF_C2
Q18	gems_rptbdb.f90	/^         Q12(2), Q13(2), Q14(2), Q15(2), Q16(2), Q17(2), Q18(/;"	k	type:ACM_COF_C2
Q22	gems_rptbdb.f90	/^         Q45(2), Q11, Q22,/;"	k	type:ACM_COF_C2
Q23	gems_rptbdb.f90	/^         Q12(2), Q13(2), Q14(2), Q15(2), Q16(2), Q17(2), Q18(2), &$/;"	k	type:ACM_COF_C2
Q24	gems_rptbdb.f90	/^         Q23(2), Q24(/;"	k	type:ACM_COF_C2
Q25	gems_rptbdb.f90	/^         Q23(2), Q24(2), Q25(/;"	k	type:ACM_COF_C2
Q26	gems_rptbdb.f90	/^         Q23(2), Q24(2), Q25(2), Q26(/;"	k	type:ACM_COF_C2
Q27	gems_rptbdb.f90	/^         Q23(2), Q24(2), Q25(2), Q26(2), Q27(/;"	k	type:ACM_COF_C2
Q33	gems_rptbdb.f90	/^         Q45(2), Q11, Q22, Q33,/;"	k	type:ACM_COF_C2
Q34	gems_rptbdb.f90	/^         Q23(2), Q24(2), Q25(2), Q26(2), Q27(2), &$/;"	k	type:ACM_COF_C2
Q35	gems_rptbdb.f90	/^         Q34(2), Q35(/;"	k	type:ACM_COF_C2
Q36	gems_rptbdb.f90	/^         Q34(2), Q35(2), Q36(/;"	k	type:ACM_COF_C2
Q44	gems_rptbdb.f90	/^         Q45(2), Q11, Q22, Q33, Q44,/;"	k	type:ACM_COF_C2
Q45	gems_rptbdb.f90	/^         Q34(2), Q35(2), Q36(2), &$/;"	k	type:ACM_COF_C2
QLocate	gems_rptbdb.f90	/^                                                function QLocate(/;"	f	module:RPTBDB_setup
Qvar	gems_rptbdb.f90	/^   type Qvar$/;"	t	module:RPTBDB_constant
R	gems_type.f90	/^    real(kind = rfp) :: R /;"	k	type:therm
RB	gems_data.f90	/^   type(p2FttRootCell) :: RB(/;"	v	module:gems_data
RPTBDB_GIBBS	gems_rptbdb.f90	/^      real(rfp), pointer :: RPTBDB_WK(:,:), RPTBDB_GIBBS(/;"	k	type:FttRootCell
RPTBDB_N2N	gems_rptbdb.f90	/^                                                integer, pointer :: RPTBDB_N2N(/;"	v	module:RPTBDB_common_data
RPTBDB_NEND	gems_rptbdb.f90	/^                                                integer, pointer :: RPTBDB_N2N(:), RPTBDB_NEND(/;"	v	module:RPTBDB_common_data
RPTBDB_Num_Tri_Cell	gems_rptbdb.f90	/^                                                integer :: RPTBDB_Num_Tri_Cell$/;"	v	module:RPTBDB_common_data
RPTBDB_Tri_Cells	gems_rptbdb.f90	/^                                                type(p2TriCell), pointer :: RPTBDB_Tri_Cells(/;"	v	module:RPTBDB_common_data
RPTBDB_WK	gems_rptbdb.f90	/^      real(rfp), pointer :: RPTBDB_WK(/;"	k	type:FttRootCell
RPTBDB_WK1	gems_rptbdb.f90	/^      real(rfp), pointer :: RPTBDB_WK(:,:), RPTBDB_GIBBS(:), RPTBDB_WK1(/;"	k	type:FttRootCell
RPTBDB_WK2	gems_rptbdb.f90	/^      real(rfp), pointer :: RPTBDB_WK(:,:), RPTBDB_GIBBS(:), RPTBDB_WK1(:,:), RPTBDB_WK2(/;"	k	type:FttRootCell
RPTBDB_common_data	gems_rptbdb.f90	/^                                             MODULE RPTBDB_common_data$/;"	m
RPTBDB_constant	gems_rptbdb.f90	/^MODULE RPTBDB_constant$/;"	m
RPTBDB_data_structure	gems_rptbdb.f90	/^                                             MODULE RPTBDB_data_structure$/;"	m
RPTBDB_node	gems_rptbdb.f90	/^   type RPTBDB_node$/;"	t	module:RPTBDB_constant
RPTBDB_setup	gems_rptbdb.f90	/^                                             Module RPTBDB_setup$/;"	m
RPTBDB_spline	gems_rptbdb.f90	/^                                             MODULE RPTBDB_spline$/;"	m
ReadDatabase	gems_rptbdb.f90	/^                                                function ReadDatabase(/;"	f	module:RPTBDB_setup
Rusanov_flux	gems_fv.f90	/^   subroutine Rusanov_flux(/;"	s	module:gems_fv
SL2	gems_rptbdb.f90	/^         DX(3), DY(3), DX2(3), DY2(3), SL2(/;"	k	type:ACM_COF_C1
SL2	gems_rptbdb.f90	/^         DX(3), DY(3), DX2(3), DY2(3), SL2(/;"	k	type:ACM_COF_C2
SplineSeg	gems_rptbdb.f90	/^   type SplineSeg$/;"	t	module:RPTBDB_constant
TRUE	gems_rptbdb.f90	/^   logical, parameter :: FALSE = .false., TRUE /;"	v	module:RPTBDB_constant
Tb	gems_type.f90	/^    real(rfp) :: pb, Tb$/;"	k	type:solid
Thermal_Buoyancy_on	gems_type.f90	/^    integer :: Darcy_on, Thermal_Buoyancy_on,/;"	k	type:solid
Titv	gems_type.f90	/^    real(rfp) :: Titv(/;"	k	type:therm
TriCell	gems_rptbdb.f90	/^   type TriCell$/;"	t	module:RPTBDB_constant
TriCellNumbering	gems_rptbdb.f90	/^                                                subroutine TriCellNumbering(/;"	s	module:RPTBDB_data_structure
TriGeom	gems_rptbdb.f90	/^      integer :: TriGeom,/;"	k	type:FttCell
a_average_jacobian	gems_fv.f90	/^   function a_average_jacobian(/;"	f	module:gems_fv
aaws	gems_jacob.f90	/^   subroutine aaws(/;"	s	module:gems_jacob
ab	gems_type.f90	/^    real(kind = rfp) :: ab(/;"	k	type:react
absorption_coef	gems_state.f90	/^   function absorption_coef(/;"	f
acf	gems_rptbdb.f90	/^      type(ACM_COF_C2), pointer :: acf$/;"	k	type:TriCell
acf1	gems_rptbdb.f90	/^      type(ACM_COF_C1), pointer :: acf1,/;"	k	type:TriCell
acf2	gems_rptbdb.f90	/^      type(ACM_COF_C1), pointer :: acf1, acf2$/;"	k	type:TriCell
acrossb	gems_library.f90	/^   function acrossb(/;"	f	module:gems_library
af	gems_type.f90	/^    real(kind = rfp) :: af(/;"	k	type:react
ajacobian	gems_jacob.f90	/^   function ajacobian(/;"	f	module:gems_jacob
ajl	gems_type.f90	/^    type(matrix) :: ajl,/;"	k	type:face
ajr	gems_type.f90	/^    type(matrix) :: ajl, ajr /;"	k	type:face
alpha	gems_type.f90	/^    real(rfp) :: mul, beta, sigma, sigmaT, k0, dl, alpha,/;"	k	type:solid
alpha	gems_type.f90	/^    real(rfp), pointer :: satp(:), alpha(/;"	k	type:gas
area	gems_type.f90	/^    real(kind = rfp) :: area /;"	k	type:face
area	gems_type.f90	/^    real(rfp) :: area$/;"	k	type:bc_type
area2d	gems_library.f90	/^   function area2d(/;"	f	module:gems_library
area3d	gems_library.f90	/^   function area3d(/;"	f	module:gems_library
avec	gems_type.f90	/^    real(rfp), pointer :: avec(/;"	k	type:face
average_center	gems_geom.f90	/^   function average_center(/;"	f	module:gems_geom
avto3	gems_library.f90	/^   function avto3(/;"	f	module:gems_library
axis_mhd_source	gems_source.f90	/^   subroutine axis_mhd_source(/;"	s	module:gems_source
axis_source	gems_source.f90	/^   subroutine axis_source(/;"	s	module:gems_source
axisymmetry	gems_bound.f90	/^   subroutine axisymmetry(/;"	s	module:gems_bound
axisymmetry_jacob	gems_bound.f90	/^   subroutine axisymmetry_jacob(/;"	s
b_lenref	gems_data.f90	/^   real(rfp) :: b_lenref,/;"	v	module:gems_data
b_nblade	gems_data.f90	/^   real(rfp) :: b_lenref, b_re, b_p0, b_pinf, b_rhoinf, b_vinf, b_nblade$/;"	v	module:gems_data
b_p0	gems_data.f90	/^   real(rfp) :: b_lenref, b_re, b_p0,/;"	v	module:gems_data
b_pinf	gems_data.f90	/^   real(rfp) :: b_lenref, b_re, b_p0, b_pinf,/;"	v	module:gems_data
b_re	gems_data.f90	/^   real(rfp) :: b_lenref, b_re,/;"	v	module:gems_data
b_rhoinf	gems_data.f90	/^   real(rfp) :: b_lenref, b_re, b_p0, b_pinf, b_rhoinf,/;"	v	module:gems_data
b_vinf	gems_data.f90	/^   real(rfp) :: b_lenref, b_re, b_p0, b_pinf, b_rhoinf, b_vinf,/;"	v	module:gems_data
balance_mass	gems_bound.f90	/^   subroutine balance_mass(/;"	s	module:gems_bound
barth_limiter	gems_disc.f90	/^   subroutine barth_limiter(/;"	s	module:gems_disc
bc	gems_data.f90	/^   type(bc_/;"	v	module:gems_data
bc_type	gems_type.f90	/^  type bc_type$/;"	t	module:gems_type
bchain	gems_type.f90	/^    type(chain), pointer :: bchain(/;"	k	type:raw_chain
beta	gems_type.f90	/^    real(rfp) :: mul, beta,/;"	k	type:solid
bfile	gems_input.f90	/^   character(len = 80) :: gridfile, bfile,/;"	v	module:gems_input
bfun	gems_state.f90	/^   function bfun(/;"	f
bicgstab_dilu	gems_linear.f90	/^      subroutine bicgstab_dilu$/;"	s	subroutine:linear_solve
blackbody_volumetric_radiation	gems_source.f90	/^   subroutine blackbody_volumetric_radiation(/;"	s	module:gems_source
block_dlu	gems_linear.f90	/^      subroutine block_dlu$/;"	s	subroutine:linear_solve
block_tri_solve	gems_library.f90	/^   subroutine block_tri_solve(/;"	s	module:gems_library
bnd_cell	gems_rptbdb.f90	/^      type(FttCell), pointer :: bnd_cell(/;"	k	type:FttRootCell
bnode	gems_type.f90	/^  type bnode$/;"	t	module:gems_type
bnodes	gems_main.f90	/^   type(bnode), pointer, save :: bnodes(/;"	v	program:gems_main
boltzmann_c	gems_constant.f90	/^   real(rfp), parameter :: boltzmann_c /;"	v	module:gems_constant
boundary_condition	gems_bound.f90	/^   subroutine boundary_condition(/;"	s	module:gems_bound
broadcast_species	gems_reaction.f90	/^   subroutine broadcast_species(/;"	s	module:gems_react
bthetaf	gems_state.f90	/^   function bthetaf(/;"	f
c	gems_rptbdb.f90	/^      type(FttCell) :: c(/;"	k	type:FttCellChildren
c0	gems_type.f90	/^    real(rfp) :: p0, t0, c0,/;"	k	type:gas
c2n	gems_rptbdb.f90	/^      type(p2node) :: c2n(/;"	k	type:FttCell
c2n	gems_rptbdb.f90	/^      type(p2node) :: c2n(/;"	k	type:TriCell
c2n	gems_rptbdb.f90	/^      type(p2node) :: c2n(/;"	k	type:cell
c2n	gems_type.f90	/^    integer, pointer :: c2n(/;"	k	type:cell
cal_node_qv	gems_disc.f90	/^   subroutine cal_node_qv(/;"	s	module:gems_disc
cavitation_source	gems_source.f90	/^   subroutine cavitation_source(/;"	s	module:gems_source
cc	gems_type.f90	/^    type(cell), pointer :: cc$/;"	k	type:chain
ce	gems_type.f90	/^    real(kind = rfp) :: ce /;"	k	type:therm
cell	gems_rptbdb.f90	/^      type(p2FttCell) :: cell(/;"	k	type:FttOct
cell	gems_rptbdb.f90	/^   type cell$/;"	t	module:RPTBDB_constant
cell	gems_type.f90	/^  type cell$/;"	t	module:gems_type
cell_gradient	gems_disc.f90	/^   subroutine cell_gradient(/;"	s	module:gems_disc
cell_traverse_leafs	gems_rptbdb.f90	/^                                                recursive subroutine cell_traverse_leafs(/;"	s	module:RPTBDB_data_structure
cells	gems_main.f90	/^   type(cell), pointer, save :: cells(/;"	v	program:gems_main
cells	gems_rptbdb.f90	/^      type(p2FttCell), pointer :: cells(/;"	k	type:FttRootCell
center	gems_rptbdb.f90	/^      type(FttVector) :: center$/;"	k	type:FttCell
centerline	gems_bound.f90	/^   subroutine centerline(/;"	s	module:gems_bound
centp	gems_type.f90	/^    real(kind = rfp) :: centp(/;"	k	type:cell
centp	gems_type.f90	/^    real(kind = rfp) :: centp(/;"	k	type:face
centp	gems_type.f90	/^    real(kind = rfp) :: centp(/;"	k	type:wallface
cf	gems_type.f90	/^    type(face), pointer :: cf$/;"	k	type:chain
cfl	gems_type.f90	/^    real(rfp), pointer :: cfl(/;"	k	type:job
chain	gems_type.f90	/^  type chain$/;"	t	module:gems_type
check_at_cell	gems_input.f90	/^   recursive subroutine check_at_cell(/;"	s	module:gems_input
check_cell_inf	gems_linear.f90	/^      subroutine check_cell_inf(/;"	s	subroutine:linear_solve
check_conv	gems_main.f90	/^   subroutine check_conv(/;"	s	program:gems_main
check_cross_face	gems_output.f90	/^   subroutine check_cross_face(/;"	s	module:gems_output
check_parallel	gems_library.f90	/^   function check_parallel(/;"	f	module:gems_library
chemical_reaction	gems_reaction.f90	/^   subroutine chemical_reaction(/;"	s	module:gems_react
children	gems_rptbdb.f90	/^      type(FttOct), pointer :: parent, children$/;"	k	type:FttCell
children_index	gems_rptbdb.f90	/^      integer, pointer :: children_index(/;"	k	type:FttRootCell
cl	gems_type.f90	/^    real(kind = rfp) :: cl /;"	k	type:therm
cm	gems_rptbdb.f90	/^      real(rfp), pointer :: x(:), y(:), cm(/;"	k	type:SplineSeg
collect_bnode	gems_bound.f90	/^   subroutine collect_bnode(/;"	s
collect_face	gems_bound.f90	/^   subroutine collect_face(/;"	s	module:gems_bound
concentration	gems_state.f90	/^   function concentration(/;"	f
conservative_qv	gems_jacob.f90	/^   function conservative_qv(/;"	f	module:gems_jacob
convert_line_to_terms	gems_reaction.f90	/^   subroutine convert_line_to_terms(/;"	s	module:gems_react
convert_reac_to_specs	gems_reaction.f90	/^   subroutine convert_reac_to_specs(/;"	s	module:gems_react
correct_value	gems_main.f90	/^   subroutine correct_value(/;"	s	program:gems_main
cp	gems_type.f90	/^    integer, pointer :: cp(/;"	k	type:itf
cpl	gems_type.f90	/^    real(rfp) :: cpl,/;"	k	type:solid
cpp	gems_type.f90	/^    real(rfp) :: cpp(/;"	k	type:therm
cps	gems_type.f90	/^    real(rfp) :: cpl, cps,/;"	k	type:solid
cpu_time	gems_main.f90	/^   real(rfp) :: cpu_time(/;"	v	program:gems_main
cramer	gems_library.f90	/^   function cramer(/;"	f	module:gems_library
cross2mat	gems_library.f90	/^   function cross2mat(/;"	f	module:gems_library
ct	gems_type.f90	/^    real(rfp) :: vt(4), ct(/;"	k	type:therm
curl	gems_library.f90	/^   function curl(/;"	f	module:gems_library
current_vs_time	gems_bound.f90	/^   function current_vs_time(/;"	f
cvf	gems_state.f90	/^   function cvf(/;"	f
db_moncell	gems_data.f90	/^   type(cell), pointer :: db_moncell /;"	v	module:gems_data
dc	gems_type.f90	/^    real(rfp) :: p0, t0, c0, dp, dt, dc$/;"	k	type:gas
decide_cfl	gems_main.f90	/^   subroutine decide_cfl(/;"	s	program:gems_main
determinant	gems_library.f90	/^   function determinant(/;"	f	module:gems_library
diagadd	gems_library.f90	/^   subroutine diagadd(/;"	s	module:gems_library
diagsum	gems_library.f90	/^   function diagsum(/;"	f	module:gems_library
diff_coef	gems_fv.f90	/^   function diff_coef(/;"	f	module:gems_fv
direct_inv	gems_library.f90	/^   subroutine direct_inv(/;"	s	module:gems_library
divf	gems_state.f90	/^   subroutine divf(/;"	s
dj	gems_source.f90	/^   function dj(/;"	f	module:gems_source
dl	gems_type.f90	/^    real(rfp) :: mul, beta, sigma, sigmaT, k0, dl,/;"	k	type:solid
dl_lgs	gems_linear.f90	/^      subroutine dl_lgs$/;"	s	subroutine:linear_solve
dli_limiter	gems_disc.f90	/^   subroutine dli_limiter(/;"	s	module:gems_disc
dm	gems_type.f90	/^    type(matrix) :: dm /;"	k	type:cell
dp	gems_type.f90	/^    real(rfp) :: p0, t0, c0, dp,/;"	k	type:gas
dqv	gems_type.f90	/^    type(vector) :: qv, dqv /;"	k	type:cell
dt	gems_type.f90	/^    real(rfp) :: p0, t0, c0, dp, dt,/;"	k	type:gas
e	gems_rptbdb.f90	/^      type(/;"	k	type:FttCellNeighbors
e	gems_type.f90	/^    rea/;"	k	type:matrix
e_b0	gems_data.f90	/^   real(kind = rfp), pointer :: e_b0(/;"	v	module:gems_data
e_resistivity	gems_state.f90	/^   function e_resistivity(/;"	f
eb_userdefine	gems_bound.f90	/^   subroutine eb_userdefine(/;"	s
eigenvalues	gems_jacob.f90	/^   subroutine eigenvalues(/;"	s	module:gems_jacob
eigenvector	gems_jacob.f90	/^   subroutine eigenvector(/;"	s	module:gems_jacob
electric_current	gems_source.f90	/^   subroutine electric_current(/;"	s	module:gems_source
element_center	gems_geom.f90	/^   recursive subroutine element_center(/;"	s	module:gems_geom
element_type	gems_output.f90	/^   function element_type(/;"	f	module:gems_output
emi	gems_type.f90	/^    real(rfp) :: mul, beta, sigma, sigmaT, k0, dl, alpha, emi$/;"	k	type:solid
entropyf	gems_state.f90	/^   function entropyf(/;"	f
er	gems_type.f90	/^    real(kind = rfp) :: srf, srfm, rp, er /;"	k	type:cell
eval_spline	gems_library.f90	/^   function eval_spline(/;"	f	module:gems_library
external_source	gems_source.f90	/^   subroutine external_source(/;"	s	module:gems_source
f	gems_state.f90	/^      real(rfp/;"	v
f2n	gems_type.f90	/^    integer, pointer :: f2n(/;"	k	type:face
face	gems_type.f90	/^  type face$/;"	t	module:gems_type
face_center	gems_geom.f90	/^   recursive subroutine face_center(/;"	s	module:gems_geom
face_geom	gems_geom.f90	/^   subroutine face_geom(/;"	s	module:gems_geom
face_gradient	gems_disc.f90	/^   subroutine face_gradient(/;"	s	module:gems_disc
face_gradient_dli1	gems_disc.f90	/^   subroutine face_gradient_dli1(/;"	s	module:gems_disc
face_gradient_dli2	gems_disc.f90	/^   subroutine face_gradient_dli2(/;"	s	module:gems_disc
face_gradient_orth	gems_disc.f90	/^   subroutine face_gradient_orth(/;"	s	module:gems_disc
face_qv	gems_disc.f90	/^   subroutine face_qv(/;"	s	module:gems_disc
face_qv_tauw	gems_output.f90	/^   subroutine face_qv_tauw(/;"	s	module:gems_output
face_reconstruction	gems_disc.f90	/^   subroutine face_reconstruction(/;"	s	module:gems_disc
face_value	gems_output.f90	/^   function face_value(/;"	f	module:gems_output
facefluxscheme	gems_fv.f90	/^   subroutine facefluxscheme(/;"	s	module:gems_fv
facelist	gems_type.f90	/^    integer, pointer :: facelist(/;"	k	type:bc_type
faces	gems_main.f90	/^   type(face), pointer, save :: faces(/;"	v	program:gems_main
faces	gems_type.f90	/^    type(wallface), pointer :: faces(/;"	k	type:wallbl
farfield	gems_input.f90	/^      namelist \/farfield\//;"	n	subroutine:read_farfield
farfield_boundary	gems_bound.f90	/^   subroutine farfield_boundary(/;"	s	module:gems_bound
farfield_jacob	gems_bound.f90	/^   subroutine farfield_jacob(/;"	s
farfield_type	gems_constant.f90	/^   integer, parameter :: farfield_type /;"	v	module:gems_constant
fc	gems_state.f90	/^      real(rfp) :: fp, ft, fc,/;"	v
fi	gems_state.f90	/^      real(rfp) :: fp, ft, fc, p, t, fi$/;"	v
find_elem_in_spec	gems_reaction.f90	/^   subroutine find_elem_in_spec(/;"	s	module:gems_react
find_rank_and_location	gems_turb.f90	/^   subroutine find_rank_and_location(/;"	s	module:gems_turb
find_spec_in_reac	gems_reaction.f90	/^   subroutine find_spec_in_reac(/;"	s	module:gems_react
five_third	gems_constant.f90	/^   real(rfp), parameter    :: five_third /;"	v	module:gems_constant
flags	gems_rptbdb.f90	/^      integer :: flags$/;"	k	type:FttCell
fluid	gems_data.f90	/^   type(gas) :: fluid(/;"	v	module:gems_data
fluid_property	gems_input.f90	/^   subroutine fluid_property$/;"	s	module:gems_input
fluxv	gems_jacob.f90	/^   function fluxv(/;"	f	module:gems_jacob
fmax	gems_type.f90	/^    real(rfp) :: utawonu, ymax, fmax,/;"	k	type:wallface
fnames	gems_input.f90	/^   character(len = 80) :: fnames(/;"	v	module:gems_input
force_on_wall	gems_output.f90	/^   subroutine force_on_wall(/;"	s	module:gems_output
forward_sweep	gems_linear.f90	/^      subroutine forward_sweep(/;"	s	subroutine:linear_solve
four	gems_constant.f90	/^   real(rfp), parameter    :: four /;"	v	module:gems_constant
four_third	gems_constant.f90	/^   real(rfp), parameter    :: four_third /;"	v	module:gems_constant
fp	gems_state.f90	/^      real(rfp)/;"	v
ft	gems_state.f90	/^      real(rfp) :: fp, ft,/;"	v
ftt_cell_id	gems_rptbdb.f90	/^                                                function ftt_cell_id(/;"	f	module:RPTBDB_data_structure
ftt_cell_level	gems_rptbdb.f90	/^                                                function ftt_cell_level(/;"	f	module:RPTBDB_data_structure
ftt_cell_locate	gems_rptbdb.f90	/^                                                recursive function ftt_cell_locate(/;"	f	module:RPTBDB_data_structure
fun_qv	gems_output.f90	/^   function fun_qv(/;"	f	module:gems_output
g_absorptivity	gems_data.f90	/^   real(kind = rfp) :: g_absorptivity /;"	v	module:gems_data
g_b0	gems_data.f90	/^   real(kind = rfp) :: g_b0(/;"	v	module:gems_data
g_cdest	gems_data.f90	/^   real(kind = rfp) :: g_cdest,/;"	v	module:gems_data
g_cpi	gems_data.f90	/^   real(kind = rfp) :: g_cpi(/;"	v	module:gems_data
g_cprod	gems_data.f90	/^   real(kind = rfp) :: g_cdest, g_cprod /;"	v	module:gems_data
g_cvi	gems_data.f90	/^   real(kind = rfp) :: g_cvi(/;"	v	module:gems_data
g_elec	gems_data.f90	/^   real(kind = rfp) :: g_elec /;"	v	module:gems_data
g_epsi0	gems_data.f90	/^   real(kind = rfp) :: g_epsi0 /;"	v	module:gems_data
g_gm	gems_data.f90	/^   real(kind = rfp) :: g_gm /;"	v	module:gems_data
g_gravity	gems_data.f90	/^   real(kind = rfp) :: g_gravity(/;"	v	module:gems_data
g_hrefi	gems_data.f90	/^   real(kind = rfp) :: g_hrefi(/;"	v	module:gems_data
g_htref	gems_data.f90	/^   real(kind = rfp) :: g_hrefi(nspe), g_htref(/;"	v	module:gems_data
g_igrav	gems_data.f90	/^   integer :: g_igrav /;"	v	module:gems_data
g_itype	gems_data.f90	/^   integer :: g_itype(/;"	v	module:gems_data
g_mu0	gems_data.f90	/^   real(kind = rfp) :: g_mu0 /;"	v	module:gems_data
g_mu0inv	gems_data.f90	/^   real(kind = rfp) :: g_mu0inv /;"	v	module:gems_data
g_mwi	gems_data.f90	/^   real(kind = rfp) :: g_mwi(/;"	v	module:gems_data
g_ne	gems_data.f90	/^   real(kind = rfp) :: g_ne(/;"	v	module:gems_data
g_patm	gems_data.f90	/^   real(kind = rfp) :: g_patm /;"	v	module:gems_data
g_pbase	gems_data.f90	/^   real(kind = rfp) :: g_pbase,/;"	v	module:gems_data
g_pr	gems_data.f90	/^   real(kind = rfp) :: g_pr(/;"	v	module:gems_data
g_prt	gems_data.f90	/^   real(kind = rfp) :: g_prt /;"	v	module:gems_data
g_r	gems_data.f90	/^   real(kind = rfp) :: g_r /;"	v	module:gems_data
g_rho0	gems_data.f90	/^   real(kind = rfp) :: g_rho0(/;"	v	module:gems_data
g_rhobase	gems_data.f90	/^   real(kind = rfp) :: g_pbase, g_rhobase /;"	v	module:gems_data
g_runi	gems_data.f90	/^   real(kind = rfp) :: g_runi /;"	v	module:gems_data
g_sch	gems_data.f90	/^   real(kind = rfp) :: g_sch /;"	v	module:gems_data
g_scht	gems_data.f90	/^   real(kind = rfp) :: g_scht /;"	v	module:gems_data
g_sigma	gems_data.f90	/^   real(kind = rfp) :: g_sigma(/;"	v	module:gems_data
g_sref	gems_data.f90	/^   real(kind = rfp) :: g_tref(nspe), g_sref(/;"	v	module:gems_data
g_tref	gems_data.f90	/^   real(kind = rfp) :: g_tref(/;"	v	module:gems_data
g_troom	gems_data.f90	/^   real(kind = rfp) :: g_troom /;"	v	module:gems_data
g_zi	gems_data.f90	/^   real(kind = rfp) :: g_zi(/;"	v	module:gems_data
g_zmu	gems_data.f90	/^   real(kind = rfp) :: g_zmu(/;"	v	module:gems_data
gamma	gems_jacob.f90	/^   function gamma(/;"	f	module:gems_jacob
gas	gems_type.f90	/^  type gas$/;"	t	module:gems_type
gas_prop	gems_input.f90	/^      namelist \/gas_prop\//;"	n	subroutine:fluid_property
gear_c	gems_data.f90	/^   real(rfp), pointer :: gear_c(/;"	v	module:gems_data
gear_in	gems_data.f90	/^   integer, pointer :: gear_in(/;"	v	module:gems_data
gems_bound	gems_bound.f90	/^module gems_bound$/;"	m
gems_constant	gems_constant.f90	/^module gems_constant$/;"	m
gems_data	gems_data.f90	/^module gems_data$/;"	m
gems_disc	gems_disc.f90	/^module gems_disc$/;"	m
gems_fv	gems_fv.f90	/^module gems_fv$/;"	m
gems_geom	gems_geom.f90	/^module gems_geom$/;"	m
gems_input	gems_input.f90	/^module gems_input$/;"	m
gems_jacob	gems_jacob.f90	/^module gems_jacob$/;"	m
gems_library	gems_library.f90	/^module gems_library$/;"	m
gems_linear	gems_linear.f90	/^module gems_linear$/;"	m
gems_main	gems_main.f90	/^program gems_main$/;"	p
gems_output	gems_output.f90	/^module gems_output$/;"	m
gems_precon	gems_precon.f90	/^module gems_precon$/;"	m
gems_react	gems_reaction.f90	/^module gems_react$/;"	m
gems_source	gems_source.f90	/^module gems_source$/;"	m
gems_state	gems_state.f90	/^module gems_state$/;"	m
gems_turb	gems_turb.f90	/^module gems_turb$/;"	m
gems_type	gems_type.f90	/^module gems_type$/;"	m
geom	gems_input.f90	/^      namelist \/geom\//;"	n	subroutine:grid_information
geom_boundary	gems_bound.f90	/^   subroutine geom_boundary(/;"	s	module:gems_bound
geom_jacob	gems_bound.f90	/^   subroutine geom_jacob(/;"	s
geom_topology	gems_constant.f90	/^   integer, parameter :: geom_topology /;"	v	module:gems_constant
geom_type	gems_input.f90	/^      namelist \/geom_type\//;"	n	subroutine:read_geom_boundary
geometry	gems_geom.f90	/^   subroutine geometry(/;"	s	module:gems_geom
given_electric_current	gems_source.f90	/^   subroutine given_electric_current(/;"	s	module:gems_source
gmres_dilu	gems_linear.f90	/^      subroutine gmres_dilu$/;"	s	subroutine:linear_solve
gmres_lgs	gems_linear.f90	/^      subroutine gmres_lgs$/;"	s	subroutine:linear_solve
grad_recon	gems_disc.f90	/^   subroutine grad_recon(/;"	s	module:gems_disc
gradient	gems_type.f90	/^    real(kind = rfp), pointer :: gradient(/;"	k	type:cell
gravity	gems_type.f90	/^    real(rfp) :: gravity(/;"	k	type:solid
gravity_source	gems_source.f90	/^   subroutine gravity_source(/;"	s	module:gems_source
grid_information	gems_input.f90	/^   subroutine grid_information(/;"	s	module:gems_input
gridfile	gems_input.f90	/^   character(len = 80) :: gridfile,/;"	v	module:gems_input
gridfile0	gems_input.f90	/^   character(len = 80) :: gridfile, bfile, gridfile0$/;"	v	module:gems_input
growth_source	gems_source.f90	/^   subroutine growth_source(/;"	s	module:gems_source
h	gems_type.f90	/^    real(rfp), pointer :: h(/;"	k	type:gas
h0f	gems_state.f90	/^   function h0f(/;"	f	module:gems_state
half	gems_constant.f90	/^   real(rfp), parameter    :: half /;"	v	module:gems_constant
half	gems_rptbdb.f90	/^   real(rfp), parameter :: one = 1.0_rfp, zero = 0.0_rfp, half /;"	v	module:RPTBDB_constant
hall_resistivity	gems_state.f90	/^   function hall_resistivity(/;"	f
hc	gems_type.f90	/^    real(rfp), pointer :: h(:,:,:), hp(:,:,:), ht(:,:,:), hc(/;"	k	type:gas
hf	gems_state.f90	/^   function hf(/;"	f	module:gems_state
hhp	gems_type.f90	/^    real(rfp) :: cpp(7, 3), hhp(/;"	k	type:therm
hif	gems_state.f90	/^   function hif(/;"	f	module:gems_state
hllc_flux	gems_fv.f90	/^   subroutine hllc_flux(/;"	s	module:gems_fv
hlle_flux	gems_fv.f90	/^   subroutine hlle_flux(/;"	s	module:gems_fv
hp	gems_type.f90	/^    real(rfp), pointer :: h(:,:,:), hp(/;"	k	type:gas
hpf	gems_state.f90	/^   function hpf(/;"	f	module:gems_state
hpif	gems_state.f90	/^   function hpif(/;"	f	module:gems_state
hs_condition	gems_bound.f90	/^   subroutine hs_condition(/;"	s	module:gems_bound
ht	gems_type.f90	/^    real(rfp), pointer :: h(:,:,:), hp(:,:,:), ht(/;"	k	type:gas
htf	gems_state.f90	/^   function htf(/;"	f	module:gems_state
htif	gems_state.f90	/^   function htif(/;"	f	module:gems_state
hxf	gems_state.f90	/^   function hxf(/;"	f	module:gems_state
i	gems_main.f90	/^   in/;"	v	program:gems_main
i	gems_state.f90	/^      in/;"	v
i2s	gems_library.f90	/^   function i2s(/;"	f	module:gems_library
i2s	gems_rptbdb.f90	/^                                                function i2s(/;"	f	module:RPTBDB_data_structure
i2s_pgi	gems_library.f90	/^   function i2s_pgi(/;"	f	module:gems_library
iTriCellOutput	gems_rptbdb.f90	/^                                                integer :: iTriCellOutput /;"	v	module:RPTBDB_common_data
i_con_sel	gems_rptbdb.f90	/^      integer :: i_con_sel$/;"	k	type:FttRootCell
ialg	gems_type.f90	/^    integer, pointer :: steps(:), ischeme(:), ialg(/;"	k	type:job
iaub	gems_constant.f90	/^   integer, parameter :: iaub /;"	v	module:gems_constant
iaue	gems_constant.f90	/^   integer, parameter :: iaue /;"	v	module:gems_constant
ibb	gems_constant.f90	/^   integer, parameter :: ibb /;"	v	module:gems_constant
ibe	gems_constant.f90	/^   integer, parameter :: ibe /;"	v	module:gems_constant
ic	gems_type.f90	/^    integer :: iv, ic$/;"	k	type:therm
icell	gems_type.f90	/^    integer, pointer :: nchain(:), icell(/;"	k	type:raw_chain
icheck	gems_rptbdb.f90	/^      integer :: icheck,/;"	k	type:TriCell
icheck1	gems_rptbdb.f90	/^      integer :: icheck, icheck1,/;"	k	type:TriCell
icheck2	gems_rptbdb.f90	/^      integer :: icheck, icheck1, icheck2$/;"	k	type:TriCell
icmb	gems_rptbdb.f90	/^      integer :: inew, icst, ix, iy, icmb,/;"	k	type:FttRootCell
ico	gems_constant.f90	/^   integer, parameter :: ico /;"	v	module:gems_constant
icst	gems_rptbdb.f90	/^      integer :: inew, icst,/;"	k	type:FttRootCell
id	gems_main.f90	/^   integer :: nadv, i, k, istop, ierr, np, id,/;"	v	program:gems_main
id	gems_rptbdb.f90	/^      integer :: id$/;"	k	type:FttCell
id	gems_rptbdb.f90	/^      integer :: id$/;"	k	type:RPTBDB_node
ieb	gems_constant.f90	/^   integer, parameter :: ieb /;"	v	module:gems_constant
iee	gems_constant.f90	/^   integer, parameter :: iee /;"	v	module:gems_constant
ien	gems_constant.f90	/^   integer, parameter :: ien /;"	v	module:gems_constant
ierr	gems_main.f90	/^   integer :: nadv, i, k, istop, ierr,/;"	v	program:gems_main
iexist	gems_main.f90	/^   logical :: iexist$/;"	v	program:gems_main
if3vars	gems_rptbdb.f90	/^      integer :: inew, icst, ix, iy, icmb, if3vars(/;"	k	type:FttRootCell
ifb	gems_constant.f90	/^   integer, parameter :: ifb /;"	v	module:gems_constant
ife	gems_constant.f90	/^   integer, parameter :: ife /;"	v	module:gems_constant
igrp	gems_type.f90	/^    integer :: label, itype, igrp,/;"	k	type:bc_type
ike	gems_constant.f90	/^   integer, parameter :: ike /;"	v	module:gems_constant
imb	gems_constant.f90	/^   integer, parameter :: imb /;"	v	module:gems_constant
ime	gems_constant.f90	/^   integer, parameter :: ime /;"	v	module:gems_constant
imeth	gems_type.f90	/^    integer :: neq, imeth,/;"	k	type:phy
implicit_boundary_condition	gems_bound.f90	/^   subroutine implicit_boundary_condition(/;"	s
inew	gems_rptbdb.f90	/^      integer :: inew,/;"	k	type:FttRootCell
init_baldwin_lomax	gems_turb.f90	/^   subroutine init_baldwin_lomax(/;"	s	module:gems_turb
init_reaction	gems_reaction.f90	/^   subroutine init_reaction(/;"	s	module:gems_react
initial	gems_input.f90	/^   subroutine initial(/;"	s	module:gems_input
initial_condition	gems_input.f90	/^      namelist \/initial_condition\//;"	n	subroutine:initial
inlet	gems_input.f90	/^      namelist \/inlet\//;"	n	subroutine:read_inlet
inlet_boundary	gems_bound.f90	/^   subroutine inlet_boundary(/;"	s	module:gems_bound
inlet_fan	gems_bound.f90	/^   subroutine inlet_fan(/;"	s	module:gems_bound
inlet_jacob	gems_bound.f90	/^   subroutine inlet_jacob(/;"	s
inlet_profile	gems_bound.f90	/^   subroutine inlet_profile(/;"	s	module:gems_bound
inlet_type	gems_constant.f90	/^   integer, parameter :: inlet_type /;"	v	module:gems_constant
inlet_user_define	gems_bound.f90	/^   subroutine inlet_user_define(/;"	s	module:gems_bound
insection	gems_input.f90	/^   function insection(/;"	f	module:gems_input
insection	gems_output.f90	/^   function insection(/;"	f	module:gems_output
integralvalue	gems_output.f90	/^   subroutine integralvalue(/;"	s	module:gems_output
inter_RPTBDB	gems_state.f90	/^   function inter_RPTBDB(/;"	f
interf	gems_main.f90	/^   type(itf) :: interf,/;"	v	program:gems_main
interf_liquid	gems_main.f90	/^   type(itf) :: interf_liquid,/;"	v	program:gems_main
interf_vapor	gems_main.f90	/^   type(itf) :: interf_liquid, interf_vapor$/;"	v	program:gems_main
interface_bc	gems_bound.f90	/^   subroutine interface_bc(/;"	s
interpolate_from_coarsegrid	gems_input.f90	/^   subroutine interpolate_from_coarsegrid(/;"	s	module:gems_input
interpolateqv	gems_input.f90	/^   subroutine interpolateqv(/;"	s	module:gems_input
interpolation	gems_input.f90	/^      namelist \/interpolation\//;"	n	subroutine:interpolate_from_coarsegrid
interv	gems_type.f90	/^    integer :: interv$/;"	k	type:therm
inverse_average	gems_disc.f90	/^   subroutine inverse_average(/;"	s	module:gems_disc
iom	gems_constant.f90	/^   integer, parameter :: iom /;"	v	module:gems_constant
iprecon	gems_type.f90	/^    integer, pointer :: steps(:), ischeme(:), ialg(:), iprecon(/;"	k	type:job
irad	gems_constant.f90	/^   integer, parameter :: irad /;"	v	module:gems_constant
isb	gems_constant.f90	/^   integer, parameter :: isb /;"	v	module:gems_constant
ischedule	gems_main.f90	/^   integer :: nadv, i, k, istop, ierr, np, id, ischedule /;"	v	program:gems_main
ischeme	gems_type.f90	/^    integer, pointer :: steps(:), ischeme(/;"	k	type:job
ise	gems_constant.f90	/^   integer, parameter :: ise /;"	v	module:gems_constant
isp	gems_state.f90	/^      integer, intent(in) :: isp$/;"	v
ispecialface	gems_data.f90	/^   integer :: ispecialface /;"	v	module:gems_data
istop	gems_main.f90	/^   integer :: nadv, i, k, istop,/;"	v	program:gems_main
itf	gems_type.f90	/^  type itf /;"	t	module:gems_type
itype	gems_type.f90	/^    integer :: itype /;"	k	type:cell
itype	gems_type.f90	/^    integer :: itype /;"	k	type:face
itype	gems_type.f90	/^    integer :: label, itype,/;"	k	type:bc_type
itype	gems_type.f90	/^    integer :: n, itype$/;"	k	type:bnode
iv	gems_type.f90	/^    integer :: iv,/;"	k	type:therm
ivplot	gems_data.f90	/^   integer :: nwplot, ivplot$/;"	v	module:gems_data
ix	gems_rptbdb.f90	/^      integer :: inew, icst, ix,/;"	k	type:FttRootCell
iy	gems_rptbdb.f90	/^      integer :: inew, icst, ix, iy,/;"	k	type:FttRootCell
j	gems_state.f90	/^      integer :: i, j,/;"	v
job	gems_type.f90	/^  type job$/;"	t	module:gems_type
job_schedule	gems_input.f90	/^      namelist \/job_schedule\//;"	n	subroutine:read_schedule
jv	gems_type.f90	/^    real(rfp), pointer :: jv(/;"	k	type:cell
k	gems_main.f90	/^   integer :: nadv, i, k,/;"	v	program:gems_main
k	gems_state.f90	/^      integer :: i, j, k,/;"	v
k	gems_type.f90	/^    real(rfp) :: n, k$/;"	k	type:solid
k0	gems_type.f90	/^    real(rfp) :: mul, beta, sigma, sigmaT, k0,/;"	k	type:solid
kb_equil	gems_type.f90	/^    logical :: third_body, kb_equil$/;"	k	type:react
kg2lb	gems_data.f90	/^   real(rfp) :: kg2lb /;"	v	module:gems_data
kl	gems_type.f90	/^    real(rfp) :: cpl, cps, kl,/;"	k	type:solid
ks	gems_type.f90	/^    real(rfp) :: cpl, cps, kl, ks,/;"	k	type:solid
label	gems_type.f90	/^    integer :: label,/;"	k	type:bc_type
lamd	gems_type.f90	/^    real(rfp), pointer :: s(:,:,:), mu(:,:,:), lamd(/;"	k	type:gas
lamda	gems_state.f90	/^   function lamda(/;"	f
lamda	gems_type.f90	/^    real(kind = rfp) :: mu(4, 3), lamda(/;"	k	type:therm
lamda_at_face	gems_fv.f90	/^   function lamda_at_face(/;"	f	module:gems_fv
left_cell	gems_type.f90	/^    type(cell), pointer :: left_cell /;"	k	type:face
length_for_cfl	gems_fv.f90	/^   function length_for_cfl(/;"	f	module:gems_fv
length_for_precondition	gems_precon.f90	/^  function length_for_precondition(/;"	f	module:gems_precon
level	gems_rptbdb.f90	/^      integer :: level$/;"	k	type:FttCell
level	gems_rptbdb.f90	/^      integer :: level$/;"	k	type:FttOct
lheat_evaporation	gems_type.f90	/^    real(rfp) :: cpl, cps, kl, ks, lheat_melting, lheat_evaporation$/;"	k	type:solid
lheat_melting	gems_type.f90	/^    real(rfp) :: cpl, cps, kl, ks, lheat_melting,/;"	k	type:solid
lhs	gems_fv.f90	/^   subroutine lhs(/;"	s	module:gems_fv
linear_solve	gems_linear.f90	/^   subroutine linear_solve(/;"	s	module:gems_linear
liquid_fraction	gems_state.f90	/^   function liquid_fraction(/;"	f
liquid_fraction_t	gems_state.f90	/^   function liquid_fraction_t(/;"	f
liquid_vapor_source	gems_source.f90	/^   subroutine liquid_vapor_source(/;"	s	module:gems_source
loc	gems_type.f90	/^    integer :: n, loc(/;"	k	type:react
loc	gems_type.f90	/^    integer, pointer :: loc(/;"	k	type:phy
location	gems_state.f90	/^   function location(/;"	f
location1	gems_state.f90	/^   function location1(/;"	f
locb	gems_type.f90	/^    integer :: nb, locb(/;"	k	type:react
locf	gems_type.f90	/^    integer :: nf, locf(/;"	k	type:react
lookup_period_table	gems_reaction.f90	/^   subroutine lookup_period_table(/;"	s	module:gems_react
ludecomp	gems_library.f90	/^   subroutine ludecomp(/;"	s	module:gems_library
lusolve	gems_library.f90	/^   subroutine lusolve(/;"	s	module:gems_library
m2fun	gems_fv.f90	/^   function m2fun(/;"	f	module:gems_fv
m4fun	gems_fv.f90	/^   function m4fun(/;"	f	module:gems_fv
m_input	gems_data.f90	/^   integer :: m_input /;"	v	module:gems_data
machf	gems_state.f90	/^   function machf(/;"	f
mass_diffusivity	gems_state.f90	/^   function mass_diffusivity(/;"	f
massflow	gems_output.f90	/^   subroutine massflow(/;"	s	module:gems_output
matcrossvec	gems_library.f90	/^   function matcrossvec(/;"	f	module:gems_library
matrix	gems_type.f90	/^  type matrix$/;"	t	module:gems_type
matrix_add_matrix	gems_library.f90	/^   function matrix_add_matrix(/;"	f	module:gems_library
matrix_by_array	gems_library.f90	/^   function matrix_by_array(/;"	f	module:gems_library
matrix_by_matrix	gems_library.f90	/^   function matrix_by_matrix(/;"	f	module:gems_library
matrix_by_scale	gems_library.f90	/^   function matrix_by_scale(/;"	f	module:gems_library
matrix_by_vector	gems_library.f90	/^   function matrix_by_vector(/;"	f	module:gems_library
matrix_min_matrix	gems_library.f90	/^   function matrix_min_matrix(/;"	f	module:gems_library
matrix_product	gems_library.f90	/^   function matrix_product(/;"	f	module:gems_library
matrixinv	gems_library.f90	/^   subroutine matrixinv(/;"	s	module:gems_library
matrixs_add_matrixs	gems_library.f90	/^   function matrixs_add_matrixs(/;"	f	module:gems_library
matrixs_add_scale	gems_library.f90	/^   function matrixs_add_scale(/;"	f	module:gems_library
matrixs_by_matrixs	gems_library.f90	/^   function matrixs_by_matrixs(/;"	f	module:gems_library
matrixs_by_scale	gems_library.f90	/^   function matrixs_by_scale(/;"	f	module:gems_library
matrixs_by_vectors	gems_library.f90	/^   function matrixs_by_vectors(/;"	f	module:gems_library
matrixs_min_matrixs	gems_library.f90	/^   function matrixs_min_matrixs(/;"	f	module:gems_library
matrixs_min_scale	gems_library.f90	/^   function matrixs_min_scale(/;"	f	module:gems_library
meigenmatrix	gems_jacob.f90	/^   subroutine meigenmatrix(/;"	s	module:gems_jacob
metal	gems_data.f90	/^   type(solid) :: metal$/;"	v	module:gems_data
mfluid	gems_constant.f90	/^   integer, parameter :: mfluid /;"	v	module:gems_constant
mfluid_maxwell	gems_constant.f90	/^   integer, parameter :: mfluid_maxwell /;"	v	module:gems_constant
mhd_boundary	gems_bound.f90	/^   subroutine mhd_boundary(/;"	s
mhd_btype	gems_input.f90	/^      namelist \/mhd_btype\//;"	n	subroutine:read_mhd_boundary
mhd_jacob	gems_bound.f90	/^   subroutine mhd_jacob(/;"	s
mhd_setup	gems_source.f90	/^   subroutine mhd_setup(/;"	s	module:gems_source
mhd_type	gems_constant.f90	/^   integer, parameter :: mhd_type /;"	v	module:gems_constant
mmaxwell	gems_constant.f90	/^   integer, parameter :: mmaxwell /;"	v	module:gems_constant
mole_fraction	gems_state.f90	/^   function mole_fraction(/;"	f
molecular_conductivity	gems_state.f90	/^   function molecular_conductivity(/;"	f
molecular_viscosity	gems_state.f90	/^   function molecular_viscosity(/;"	f
msolid	gems_constant.f90	/^   integer, parameter :: msolid /;"	v	module:gems_constant
msolid_maxwell	gems_constant.f90	/^   integer, parameter :: msolid_maxwell /;"	v	module:gems_constant
mturb	gems_constant.f90	/^   integer, parameter :: mturb /;"	v	module:gems_constant
mu	gems_type.f90	/^    real(kind = rfp) :: mu(/;"	k	type:therm
mu	gems_type.f90	/^    real(rfp), pointer :: s(:,:,:), mu(/;"	k	type:gas
mu_suth	gems_state.f90	/^   function mu_suth(/;"	f
mu_turb	gems_state.f90	/^   function mu_turb(/;"	f
mul	gems_type.f90	/^    real(rfp) :: mul,/;"	k	type:solid
mumix	gems_state.f90	/^   function mumix(/;"	f
mw	gems_type.f90	/^    real(kind = rfp) :: mw,/;"	k	type:therm
mwinv	gems_type.f90	/^    real(kind = rfp) :: mw, mwinv /;"	k	type:therm
my_bicgstab	gems_linear.f90	/^      subroutine my_bicgstab(/;"	s	subroutine:linear_solve
my_dot_product	gems_linear.f90	/^      function my_dot_product(/;"	f	subroutine:linear_solve
my_gmres	gems_linear.f90	/^      subroutine my_gmres(/;"	s	subroutine:linear_solve
my_gmres_lgs	gems_linear.f90	/^      subroutine my_gmres_lgs(/;"	s	subroutine:linear_solve
my_matmul	gems_linear.f90	/^      function my_matmul(/;"	f	subroutine:linear_solve
my_norm2	gems_linear.f90	/^      function my_norm2(/;"	f	subroutine:linear_solve
my_pivot	gems_linear.f90	/^      subroutine my_pivot$/;"	s	subroutine:linear_solve
my_solve_lgs	gems_linear.f90	/^      subroutine my_solve_lgs(/;"	s	subroutine:linear_solve
my_solve_lu	gems_linear.f90	/^      subroutine my_solve_lu(/;"	s	subroutine:linear_solve
myhuge	gems_constant.f90	/^   real(rfp), parameter    :: myhuge /;"	v	module:gems_constant
mytiny	gems_constant.f90	/^   real(rfp), parameter    :: mytiny /;"	v	module:gems_constant
n	gems_type.f90	/^    int/;"	k	type:bc_type
n	gems_type.f90	/^    int/;"	k	type:bnode
n	gems_type.f90	/^    int/;"	k	type:job
n	gems_type.f90	/^    int/;"	k	type:react
n	gems_type.f90	/^    int/;"	k	type:wallbl
n	gems_type.f90	/^    real(rfp) :: n,/;"	k	type:solid
nFttCells	gems_rptbdb.f90	/^      integer :: nnodes, ncells, nFttCells,/;"	k	type:FttRootCell
nTriCells	gems_rptbdb.f90	/^      integer :: nnodes, ncells, nFttCells, nTriCells$/;"	k	type:FttRootCell
nadv	gems_main.f90	/^   integer :: nadv,/;"	v	program:gems_main
name	gems_type.f90	/^    character*24 :: name$/;"	k	type:therm
naux	gems_constant.f90	/^   integer, parameter :: naux /;"	v	module:gems_constant
nb	gems_type.f90	/^    integer :: nb,/;"	k	type:react
nc	gems_state.f90	/^      integer :: i, j, k, np, nt, nc$/;"	v
nc	gems_type.f90	/^    integer :: nc,/;"	k	type:itf
nc	gems_type.f90	/^    integer :: np, nt, nc$/;"	k	type:gas
nc	gems_type.f90	/^    integer :: np, nt, nc$/;"	k	type:solid
ncells	gems_rptbdb.f90	/^      integer :: nnodes, ncells,/;"	k	type:FttRootCell
nceq	gems_constant.f90	/^   integer, parameter :: nceq /;"	v	module:gems_constant
nchain	gems_type.f90	/^    integer, pointer :: nchain(/;"	k	type:raw_chain
ncmax	gems_rptbdb.f90	/^   integer, parameter :: ncmax /;"	v	module:RPTBDB_constant
ncp	gems_type.f90	/^    integer, pointer :: cp(:), ncp(/;"	k	type:itf
ncs	gems_type.f90	/^    integer :: nc, ncs$/;"	k	type:itf
ndim	gems_constant.f90	/^   integer, parameter :: ndim /;"	v	module:gems_constant
ndim	gems_rptbdb.f90	/^   integer, parameter :: ndim /;"	v	module:RPTBDB_constant
ndim	gems_type.f90	/^    integer :: neq, imeth, ndim$/;"	k	type:phy
ndim1	gems_rptbdb.f90	/^   integer, parameter :: ndim = 2, ndim1 /;"	v	module:RPTBDB_constant
ne	gems_type.f90	/^    real(rfp), pointer :: s(:,:,:), mu(:,:,:), lamd(:,:,:), sigma(:,:,:), ne(/;"	k	type:gas
neeq	gems_constant.f90	/^   integer, parameter :: neeq /;"	v	module:gems_constant
neighbors	gems_rptbdb.f90	/^      type(FttCellNeighbors), pointer :: neighbors$/;"	k	type:FttCell
neighbour	gems_type.f90	/^  type neighbour$/;"	t	module:gems_type
neighbour_cell	gems_type.f90	/^  type neighbour_cell$/;"	t	module:gems_type
nele	gems_constant.f90	/^   integer, parameter :: nele /;"	v	module:gems_constant
neq	gems_constant.f90	/^   integer, parameter :: neq /;"	v	module:gems_constant
neq	gems_type.f90	/^    integer :: neq,/;"	k	type:phy
neq3d	gems_constant.f90	/^   integer, parameter :: neq3d /;"	v	module:gems_constant
neq4	gems_constant.f90	/^   integer, parameter :: neq4 /;"	v	module:gems_constant
neqf	gems_constant.f90	/^   integer, parameter :: neqf /;"	v	module:gems_constant
neqm	gems_constant.f90	/^   integer, parameter :: neqm /;"	v	module:gems_constant
next_chain	gems_type.f90	/^    type(chain), pointer :: up_chain, next_chain$/;"	k	type:chain
nf	gems_type.f90	/^    integer :: nf,/;"	k	type:react
nfi	gems_constant.f90	/^   integer, parameter :: nfi /;"	v	module:gems_constant
ni	gems_rptbdb.f90	/^   integer, parameter :: nvar = 9, ni /;"	v	module:RPTBDB_constant
nitf	gems_type.f90	/^    integer :: nitf$/;"	k	type:itf
nj	gems_rptbdb.f90	/^   integer, parameter :: nvar = 9, ni = 3, nj /;"	v	module:RPTBDB_constant
nmag	gems_constant.f90	/^   integer, parameter :: nmag /;"	v	module:gems_constant
nmeq	gems_constant.f90	/^   integer, parameter :: nmeq /;"	v	module:gems_constant
nn	gems_type.f90	/^    integer :: nn,/;"	k	type:itf
nnodes	gems_rptbdb.f90	/^      integer :: nnodes,/;"	k	type:FttRootCell
nnp	gems_type.f90	/^    integer, pointer :: np(:), nnp(/;"	k	type:itf
nns	gems_type.f90	/^    integer :: nn, nns /;"	k	type:itf
no_wall_function	gems_bound.f90	/^   subroutine no_wall_function(/;"	s	module:gems_bound
node	gems_type.f90	/^  type node$/;"	t	module:gems_type
nodes	gems_main.f90	/^   type(node), pointer, save :: nodes(/;"	v	program:gems_main
nodes	gems_rptbdb.f90	/^      type(RPTBDB_node), pointer :: nodes(/;"	k	type:FttRootCell
nodevalue	gems_output.f90	/^   function nodevalue(/;"	f	module:gems_output
normalize	gems_library.f90	/^   subroutine normalize(/;"	s	module:gems_library
normalize_system	gems_linear.f90	/^      subroutine normalize_system$/;"	s	subroutine:linear_solve
np	gems_main.f90	/^   integer :: nadv, i, k, istop, ierr, np,/;"	v	program:gems_main
np	gems_state.f90	/^      integer :: i, j, k, np,/;"	v
np	gems_type.f90	/^    integer :: np,/;"	k	type:gas
np	gems_type.f90	/^    integer :: np,/;"	k	type:solid
np	gems_type.f90	/^    integer, pointer :: np(/;"	k	type:itf
npgs	gems_type.f90	/^    integer :: npgs$/;"	k	type:raw_chain
npoly	gems_constant.f90	/^   integer, parameter :: npoly /;"	v	module:gems_constant
npos	gems_data.f90	/^   integer :: s_imonit, npos /;"	v	module:gems_data
nrad	gems_constant.f90	/^   integer, parameter :: nrad /;"	v	module:gems_constant
nrea	gems_data.f90	/^   integer :: nrea$/;"	v	module:gems_data
nspe	gems_constant.f90	/^   integer, parameter :: nspe /;"	v	module:gems_constant
nspm1	gems_constant.f90	/^   integer, parameter :: nspm1 /;"	v	module:gems_constant
nt	gems_state.f90	/^      inte/;"	v
nt	gems_type.f90	/^    inte/;"	k	type:gas
nt	gems_type.f90	/^    inte/;"	k	type:solid
nteq	gems_constant.f90	/^   integer, parameter :: nteq /;"	v	module:gems_constant
num_of_bnd_cells	gems_rptbdb.f90	/^   integer, parameter :: num_of_bnd_cells /;"	v	module:RPTBDB_constant
number_of_boundary	gems_input.f90	/^      namelist \/number_of_boundary\//;"	n	subroutine:read_boundary
nur	gems_type.f90	/^    real(kind = rfp) :: nur(/;"	k	type:react
nurb	gems_type.f90	/^    real(kind = rfp) :: nurb(/;"	k	type:react
nurf	gems_type.f90	/^    real(kind = rfp) :: nurf(/;"	k	type:react
nvar	gems_rptbdb.f90	/^   integer, parameter :: nvar /;"	v	module:RPTBDB_constant
nwplot	gems_data.f90	/^   integer :: nwplot,/;"	v	module:gems_data
ojacob	gems_bound.f90	/^   function ojacob(/;"	f
one	gems_constant.f90	/^   real(rfp), parameter    :: one /;"	v	module:gems_constant
one	gems_rptbdb.f90	/^   real(rfp), parameter :: one /;"	v	module:RPTBDB_constant
one_third	gems_constant.f90	/^   real(rfp), parameter    :: one_third /;"	v	module:gems_constant
optimum_coef	gems_disc.f90	/^   subroutine optimum_coef(/;"	s	module:gems_disc
org_pos	gems_rptbdb.f90	/^      type(FttVector) :: pos, org_pos$/;"	k	type:RPTBDB_node
outlet	gems_input.f90	/^      namelist \/outlet\//;"	n	subroutine:read_outlet
outlet_boundary	gems_bound.f90	/^   subroutine outlet_boundary(/;"	s	module:gems_bound
outlet_jacob	gems_bound.f90	/^   subroutine outlet_jacob(/;"	s
outlet_type	gems_constant.f90	/^   integer, parameter :: outlet_type /;"	v	module:gems_constant
output_axisy_surface	gems_output.f90	/^   subroutine output_axisy_surface(/;"	s	module:gems_output
output_axisy_tecplot	gems_output.f90	/^   subroutine output_axisy_tecplot(/;"	s	module:gems_output
output_cell_tecplot	gems_output.f90	/^   subroutine output_cell_tecplot(/;"	s	module:gems_output
output_cell_tecplot_v	gems_input.f90	/^   subroutine output_cell_tecplot_v(/;"	s	module:gems_input
output_option	gems_input.f90	/^   subroutine output_option$/;"	s	module:gems_input
output_result	gems_output.f90	/^   subroutine output_result(/;"	s	module:gems_output
output_selection	gems_data.f90	/^   logical :: output_selection(/;"	v	module:gems_data
output_to_fieldview	gems_output.f90	/^   subroutine output_to_fieldview(/;"	s	module:gems_output
output_to_plot	gems_output.f90	/^   subroutine output_to_plot(/;"	s	module:gems_output
output_to_tecplot	gems_output.f90	/^   subroutine output_to_tecplot(/;"	s	module:gems_output
output_vars	gems_input.f90	/^      namelist \/output_vars\//;"	n	subroutine:output_option
p	gems_rptbdb.f90	/^      type/;"	k	type:FttCellNeighborsEle
p	gems_rptbdb.f90	/^      type/;"	k	type:FttRootCell
p	gems_rptbdb.f90	/^      type/;"	k	type:p2FttCell
p	gems_rptbdb.f90	/^      type/;"	k	type:p2FttRootCell
p	gems_rptbdb.f90	/^      type/;"	k	type:p2TriCell
p	gems_rptbdb.f90	/^      type/;"	k	type:p2node
p	gems_state.f90	/^      real(rfp)/;"	v
p0	gems_type.f90	/^    real(rfp) :: p0,/;"	k	type:gas
p2FttCell	gems_rptbdb.f90	/^   type p2FttCell$/;"	t	module:RPTBDB_constant
p2FttRootCell	gems_rptbdb.f90	/^   type p2FttRootCell$/;"	t	module:RPTBDB_constant
p2TriCell	gems_rptbdb.f90	/^   type p2TriCell$/;"	t	module:RPTBDB_constant
p2f_bl	gems_data.f90	/^   integer, pointer :: p2f_bl(/;"	v	module:gems_data
p2node	gems_rptbdb.f90	/^   type p2node$/;"	t	module:RPTBDB_constant
p5fun	gems_fv.f90	/^   function p5fun(/;"	f	module:gems_fv
parent	gems_rptbdb.f90	/^      type(FttCell), pointer :: parent$/;"	k	type:FttOct
parent	gems_rptbdb.f90	/^      type(FttOct), pointer :: parent,/;"	k	type:FttCell
partition_face_no	gems_constant.f90	/^   integer, parameter :: partition_face_no /;"	v	module:gems_constant
pb	gems_type.f90	/^    real(rfp) :: pb,/;"	k	type:solid
pcell	gems_type.f90	/^    type(cell), pointer :: pcell(/;"	k	type:itf
periodic	gems_bound.f90	/^   subroutine periodic(/;"	s	module:gems_bound
periodic_correction	gems_bound.f90	/^   subroutine periodic_correction(/;"	s	module:gems_bound
periodic_jacob	gems_bound.f90	/^   subroutine periodic_jacob(/;"	s
permutation	gems_turb.f90	/^   function permutation(/;"	f	module:gems_turb
pf	gems_state.f90	/^   function pf(/;"	f	module:gems_state
pfromrhot	gems_state.f90	/^   function pfromrhot(/;"	f
pgsforlgs	gems_linear.f90	/^      subroutine pgsforlgs(/;"	s	subroutine:linear_solve
phy	gems_type.f90	/^  type phy$/;"	t	module:gems_type
pi	gems_constant.f90	/^   real(rfp), parameter :: pi /;"	v	module:gems_constant
pi	gems_rptbdb.f90	/^   real(rfp), parameter :: pi /;"	v	module:RPTBDB_constant
pinterf	gems_main.f90	/^   type(itf) :: interf, pinterf$/;"	v	program:gems_main
pitot_pressure	gems_state.f90	/^   function pitot_pressure(/;"	f
point_gauss_seidel	gems_linear.f90	/^      subroutine point_gauss_seidel$/;"	s	subroutine:linear_solve
polynomial	gems_library.f90	/^   function polynomial(/;"	f	module:gems_library
pos	gems_rptbdb.f90	/^      type(FttVector) :: pos,/;"	k	type:RPTBDB_node
post_wall	gems_output.f90	/^   subroutine post_wall(/;"	s	module:gems_output
precondition_cell	gems_precon.f90	/^  subroutine precondition_cell(/;"	s	module:gems_precon
precondition_face	gems_precon.f90	/^  subroutine precondition_face(/;"	s	module:gems_precon
pretime	gems_main.f90	/^   subroutine pretime(/;"	s	program:gems_main
prop_file	gems_reaction.f90	/^      namelist \/prop_file\//;"	n	subroutine:init_reaction
propane_global_reaction_rate	gems_source.f90	/^   subroutine propane_global_reaction_rate(/;"	s	module:gems_source
psi2pa	gems_data.f90	/^   real(rfp) :: psi2pa /;"	v	module:gems_data
psif	gems_disc.f90	/^   function psif(/;"	f	module:gems_disc
put_diag	gems_library.f90	/^   subroutine put_diag(/;"	s	module:gems_library
pz	gems_data.f90	/^   type(phy), pointer :: pz(/;"	v	module:gems_data
q	gems_rptbdb.f90	/^      type(Qvar) :: q$/;"	k	type:RPTBDB_node
q	gems_rptbdb.f90	/^      type(Qvar) :: q(/;"	k	type:vars
quarter	gems_constant.f90	/^   real(rfp), parameter    :: quarter /;"	v	module:gems_constant
qv	gems_state.f90	/^      type(vector) :: qv$/;"	v
qv	gems_type.f90	/^    type(vector) :: qv /;"	k	type:node
qv	gems_type.f90	/^    type(vector) :: qv,/;"	k	type:cell
qv_from_highorder	gems_disc.f90	/^   function qv_from_highorder(/;"	f	module:gems_disc
qvfromh0	gems_state.f90	/^   subroutine qvfromh0(/;"	s
qvfromhs	gems_state.f90	/^   subroutine qvfromhs(/;"	s
qvn	gems_type.f90	/^    type(vector), pointer :: qvn(/;"	k	type:cell
radiation_boundary	gems_bound.f90	/^   subroutine radiation_boundary(/;"	s	module:gems_bound
radiation_jacob	gems_bound.f90	/^   subroutine radiation_jacob(/;"	s
radiation_source	gems_source.f90	/^   subroutine radiation_source(/;"	s	module:gems_source
radiation_source1	gems_source.f90	/^   subroutine radiation_source1(/;"	s	module:gems_source
radius	gems_bound.f90	/^   function radius(/;"	f	module:gems_bound
raw	gems_main.f90	/^   type(raw_/;"	v	program:gems_main
raw_chain	gems_type.f90	/^  type raw_chain$/;"	t	module:gems_type
react	gems_type.f90	/^  type react$/;"	t	module:gems_type
reaction	gems_data.f90	/^   type(react), pointer :: reaction(/;"	v	module:gems_data
reaction_0eq	gems_reaction.f90	/^   subroutine reaction_0eq(/;"	s	module:gems_react
reaction_rate	gems_reaction.f90	/^   subroutine reaction_rate(/;"	s	module:gems_react
read_NASA_therm	gems_reaction.f90	/^   subroutine read_NASA_therm(/;"	s	module:gems_react
read_RPTBDB	gems_input.f90	/^   subroutine read_RPTBDB(/;"	s	module:gems_input
read_back_pressure	gems_input.f90	/^   subroutine read_back_pressure(/;"	s	module:gems_input
read_binary	gems_input.f90	/^   subroutine read_binary(/;"	s	module:gems_input
read_binary_interp	gems_input.f90	/^   subroutine read_binary_interp(/;"	s	module:gems_input
read_boundary	gems_input.f90	/^   subroutine read_boundary(/;"	s	module:gems_input
read_boundary_data_file	gems_input.f90	/^   subroutine read_boundary_data_file(/;"	s	module:gems_input
read_data	gems_input.f90	/^   subroutine read_data(/;"	s	module:gems_input
read_debug	gems_input.f90	/^   subroutine read_debug(/;"	s	module:gems_input
read_external_bfield	gems_input.f90	/^   subroutine read_external_bfield(/;"	s	module:gems_input
read_farfield	gems_input.f90	/^   subroutine read_farfield(/;"	s	module:gems_input
read_fluid_table	gems_input.f90	/^   subroutine read_fluid_table(/;"	s	module:gems_input
read_geom_boundary	gems_input.f90	/^   subroutine read_geom_boundary(/;"	s	module:gems_input
read_grid	gems_geom.f90	/^   subroutine read_grid(/;"	s	module:gems_geom
read_grid_interp	gems_geom.f90	/^   subroutine read_grid_interp(/;"	s	module:gems_geom
read_inlet	gems_input.f90	/^   subroutine read_inlet(/;"	s	module:gems_input
read_inlet_fan	gems_input.f90	/^   subroutine read_inlet_fan(/;"	s	module:gems_input
read_inlet_profile_2dto3d	gems_input.f90	/^   subroutine read_inlet_profile_2dto3d(/;"	s	module:gems_input
read_lennard_jones_potential	gems_reaction.f90	/^   subroutine read_lennard_jones_potential(/;"	s	module:gems_react
read_mhd_boundary	gems_input.f90	/^   subroutine read_mhd_boundary(/;"	s	module:gems_input
read_outlet	gems_input.f90	/^   subroutine read_outlet(/;"	s	module:gems_input
read_schedule	gems_input.f90	/^   subroutine read_schedule$/;"	s	module:gems_input
read_transport_cea	gems_reaction.f90	/^   subroutine read_transport_cea(/;"	s	module:gems_react
read_volume_conditions	gems_input.f90	/^   subroutine read_volume_conditions(/;"	s	module:gems_input
read_wall	gems_input.f90	/^   subroutine read_wall(/;"	s	module:gems_input
read_wall_temperature	gems_input.f90	/^   subroutine read_wall_temperature(/;"	s	module:gems_input
reconstruction	gems_disc.f90	/^   subroutine reconstruction(/;"	s	module:gems_disc
release	gems_input.f90	/^   subroutine release(/;"	s	module:gems_input
release_var	gems_main.f90	/^   subroutine release_var(/;"	s	program:gems_main
report_cpu_usage	gems_main.f90	/^   subroutine report_cpu_usage(/;"	s	program:gems_main
res	gems_type.f90	/^    type(vector) :: res /;"	k	type:cell
residual	gems_fv.f90	/^   subroutine residual(/;"	s	module:gems_fv
rfp	gems_constant.f90	/^   integer, parameter :: rfp /;"	v	module:gems_constant
rfp	gems_rptbdb.f90	/^   integer, parameter :: rfp /;"	v	module:RPTBDB_constant
rho	gems_type.f90	/^    real(rfp), pointer :: rho(/;"	k	type:gas
rhoc	gems_type.f90	/^    real(rfp), pointer :: rho(:,:,:), rhop(:,:,:), rhot(:,:,:), rhoc(/;"	k	type:gas
rhof	gems_state.f90	/^   function rhof(/;"	f	module:gems_state
rhoif	gems_state.f90	/^   function rhoif(/;"	f	module:gems_state
rhointer_prop	gems_state.f90	/^   function rhointer_prop(/;"	f
rhol	gems_type.f90	/^    real(rfp) :: rhol,/;"	k	type:solid
rhop	gems_type.f90	/^    real(rfp), pointer :: rho(:,:,:), rhop(/;"	k	type:gas
rhopf	gems_state.f90	/^   function rhopf(/;"	f	module:gems_state
rhopif	gems_state.f90	/^   function rhopif(/;"	f	module:gems_state
rhos	gems_type.f90	/^    real(rfp) :: rhol, rhos,/;"	k	type:solid
rhot	gems_type.f90	/^    real(rfp), pointer :: rho(:,:,:), rhop(:,:,:), rhot(/;"	k	type:gas
rhotf	gems_state.f90	/^   function rhotf(/;"	f	module:gems_state
rhotif	gems_state.f90	/^   function rhotif(/;"	f	module:gems_state
rhoxf	gems_state.f90	/^   function rhoxf(/;"	f	module:gems_state
right_cell	gems_type.f90	/^    type(cell), pointer :: right_cell /;"	k	type:face
roe_flux	gems_fv.f90	/^   subroutine roe_flux(/;"	s	module:gems_fv
rp	gems_type.f90	/^    real(kind = rfp) :: srf, srfm, rp,/;"	k	type:cell
rq2xy	gems_bound.f90	/^   subroutine rq2xy(/;"	s
s	gems_type.f90	/^    real(rfp), pointer :: s(/;"	k	type:gas
s_alpha	gems_data.f90	/^   real(kind = rfp) :: s_errm, s_alpha /;"	v	module:gems_data
s_body_vel	gems_data.f90	/^   real(kind = rfp) :: s_body_vel(/;"	v	module:gems_data
s_bspeed	gems_data.f90	/^   real(kind = rfp) :: s_bspeed /;"	v	module:gems_data
s_cfl	gems_data.f90	/^   real(kind = rfp) :: s_cfl,/;"	v	module:gems_data
s_cflm	gems_data.f90	/^   real(kind = rfp) :: s_cflm,/;"	v	module:gems_data
s_cflmax	gems_data.f90	/^   real(kind = rfp) :: s_cfl, s_cflmin, s_cflmax,/;"	v	module:gems_data
s_cflmin	gems_data.f90	/^   real(kind = rfp) :: s_cfl, s_cflmin,/;"	v	module:gems_data
s_cflmm	gems_data.f90	/^   real(kind = rfp) :: s_cflm, s_cflmm$/;"	v	module:gems_data
s_cspeed	gems_data.f90	/^   real(kind = rfp) :: s_cspeed /;"	v	module:gems_data
s_damping	gems_data.f90	/^   real(kind = rfp) :: s_cfl, s_cflmin, s_cflmax, s_vnn, s_damping /;"	v	module:gems_data
s_damping_o	gems_data.f90	/^   real(kind = rfp) :: s_omega, s_omega0, s_damping_o /;"	v	module:gems_data
s_dt	gems_data.f90	/^   real(kind = rfp) :: s_dt,/;"	v	module:gems_data
s_dt_inv	gems_data.f90	/^   real(kind = rfp) :: s_dt, s_dt_inv /;"	v	module:gems_data
s_dx	gems_data.f90	/^   real(kind = rfp) :: s_dx /;"	v	module:gems_data
s_elapsed_time	gems_data.f90	/^   real(kind = rfp) :: s_elapsed_time$/;"	v	module:gems_data
s_err	gems_data.f90	/^   type(vector) :: s_err$/;"	v	module:gems_data
s_errm	gems_data.f90	/^   real(kind = rfp) :: s_errm,/;"	v	module:gems_data
s_espeed	gems_data.f90	/^   real(kind = rfp) :: s_espeed /;"	v	module:gems_data
s_fspeed	gems_data.f90	/^   real(kind = rfp) :: s_fspeed /;"	v	module:gems_data
s_ialg	gems_data.f90	/^   integer :: s_ialg /;"	v	module:gems_data
s_iaux	gems_data.f90	/^   integer :: s_iaux /;"	v	module:gems_data
s_iaxis	gems_data.f90	/^   integer :: s_iaxis /;"	v	module:gems_data
s_ibfield	gems_data.f90	/^   integer :: s_ibfield /;"	v	module:gems_data
s_idt	gems_data.f90	/^   integer :: s_idt /;"	v	module:gems_data
s_ifile	gems_data.f90	/^   integer :: s_ifile /;"	v	module:gems_data
s_ifmt	gems_data.f90	/^   integer :: s_ifmt /;"	v	module:gems_data
s_imeth	gems_data.f90	/^   integer :: s_imeth /;"	v	module:gems_data
s_imonit	gems_data.f90	/^   integer :: s_imonit,/;"	v	module:gems_data
s_init	gems_data.f90	/^   integer :: s_init /;"	v	module:gems_data
s_iperiod	gems_data.f90	/^   integer :: s_iperiod /;"	v	module:gems_data
s_iplot	gems_data.f90	/^   integer :: s_iplot /;"	v	module:gems_data
s_ipos	gems_data.f90	/^   integer, pointer :: s_ipos(/;"	v	module:gems_data
s_ipre	gems_data.f90	/^   integer :: s_ipre /;"	v	module:gems_data
s_irealgas	gems_data.f90	/^   integer :: s_irealgas /;"	v	module:gems_data
s_irec	gems_data.f90	/^   integer :: s_irec /;"	v	module:gems_data
s_ischedule	gems_data.f90	/^   integer :: s_ischedule$/;"	v	module:gems_data
s_ischeme	gems_data.f90	/^   integer :: s_ischeme /;"	v	module:gems_data
s_iscr	gems_data.f90	/^   integer :: s_iscr /;"	v	module:gems_data
s_isource	gems_data.f90	/^   integer :: s_isource /;"	v	module:gems_data
s_istop	gems_data.f90	/^   integer :: s_istop,/;"	v	module:gems_data
s_isub	gems_data.f90	/^   integer :: s_isub /;"	v	module:gems_data
s_ivis	gems_data.f90	/^   integer :: s_ivis /;"	v	module:gems_data
s_nend	gems_data.f90	/^   integer :: s_nstart, s_nend,/;"	v	module:gems_data
s_ni	gems_data.f90	/^   integer :: s_istop, s_ni,/;"	v	module:gems_data
s_nj	gems_data.f90	/^   integer :: s_istop, s_ni, s_nj,/;"	v	module:gems_data
s_nk	gems_data.f90	/^   integer :: s_istop, s_ni, s_nj, s_nk$/;"	v	module:gems_data
s_nplot	gems_data.f90	/^   integer :: s_nplot /;"	v	module:gems_data
s_nrec	gems_data.f90	/^   integer :: s_nrec$/;"	v	module:gems_data
s_nsave	gems_data.f90	/^   integer :: s_nsave /;"	v	module:gems_data
s_nstart	gems_data.f90	/^   integer :: s_nstart,/;"	v	module:gems_data
s_nstep	gems_data.f90	/^   integer :: s_nstart, s_nend, s_nstep /;"	v	module:gems_data
s_nt	gems_data.f90	/^   integer :: s_nt /;"	v	module:gems_data
s_omega	gems_data.f90	/^   real(kind = rfp) :: s_omega,/;"	v	module:gems_data
s_omega0	gems_data.f90	/^   real(kind = rfp) :: s_omega, s_omega0,/;"	v	module:gems_data
s_origP	gems_data.f90	/^   real(kind = rfp) :: s_origP(/;"	v	module:gems_data
s_origT	gems_data.f90	/^   real(kind = rfp) :: s_origP(nspe) = zero, s_origT(/;"	v	module:gems_data
s_pcenter	gems_data.f90	/^   real(kind = rfp) :: s_pcenter(/;"	v	module:gems_data
s_pro	gems_data.f90	/^   type(Qvar) :: s_pro(/;"	v	module:gems_data
s_visb	gems_data.f90	/^   integer :: s_visb /;"	v	module:gems_data
s_vnn	gems_data.f90	/^   real(kind = rfp) :: s_cfl, s_cflmin, s_cflmax, s_vnn,/;"	v	module:gems_data
s_vpre_uns	gems_data.f90	/^   real(rfp) :: s_vpre_uns$/;"	v	module:gems_data
satp	gems_type.f90	/^    real(rfp), pointer :: satp(/;"	k	type:gas
saturationp	gems_state.f90	/^   function saturationp(/;"	f
save_binary	gems_output.f90	/^   subroutine save_binary(/;"	s	module:gems_output
scell	gems_type.f90	/^    type(neighbour_cell), pointer :: scell(/;"	k	type:bnode
scell	gems_type.f90	/^    type(neighbour_cell), pointer :: scell(/;"	k	type:cell
scell	gems_type.f90	/^    type(neighbour_cell), pointer :: scell(/;"	k	type:itf
schedule	gems_data.f90	/^   type(job) :: schedule$/;"	v	module:gems_data
search_chain	gems_geom.f90	/^   subroutine search_chain(/;"	s	module:gems_geom
search_location_at_cell	gems_input.f90	/^   subroutine search_location_at_cell(/;"	s	module:gems_input
search_neighbor	gems_geom.f90	/^   subroutine search_neighbor(/;"	s	module:gems_geom
set_boundary	gems_bound.f90	/^   subroutine set_boundary(/;"	s	module:gems_bound
set_monitor	gems_main.f90	/^   subroutine set_monitor(/;"	s	program:gems_main
set_schedule	gems_input.f90	/^   subroutine set_schedule(/;"	s	module:gems_input
set_zero	gems_fv.f90	/^   subroutine set_zero(/;"	s	module:gems_fv
setup_chain	gems_geom.f90	/^   subroutine setup_chain(/;"	s	module:gems_geom
setup_initial_bc	gems_bound.f90	/^   subroutine setup_initial_bc(/;"	s	module:gems_bound
setup_periodic_face	gems_bound.f90	/^   subroutine setup_periodic_face(/;"	s
setup_problem	gems_input.f90	/^   subroutine setup_problem$/;"	s	module:gems_input
setup_special_faces	gems_bound.f90	/^   subroutine setup_special_faces(/;"	s	module:gems_bound
sface	gems_type.f90	/^    type(neighbour), pointer :: sface(/;"	k	type:cell
sface	gems_type.f90	/^    type(neighbour), pointer :: sface(/;"	k	type:itf
sif	gems_state.f90	/^   function sif(/;"	f
sigma	gems_type.f90	/^    real(rfp) :: mul, beta, sigma,/;"	k	type:solid
sigma	gems_type.f90	/^    real(rfp), pointer :: s(:,:,:), mu(:,:,:), lamd(:,:,:), sigma(/;"	k	type:gas
sigmaT	gems_type.f90	/^    real(rfp) :: mul, beta, sigma, sigmaT,/;"	k	type:solid
sigma_pf	gems_state.f90	/^   function sigma_pf(/;"	f
sigma_tf	gems_state.f90	/^   function sigma_tf(/;"	f
smooth_residual	gems_linear.f90	/^      subroutine smooth_residual$/;"	s	subroutine:linear_solve
snrm2	gems_library.f90	/^   function snrm2(/;"	f	module:gems_library
snrm2_xl	gems_library.f90	/^   function snrm2_xl(/;"	f	module:gems_library
solid	gems_type.f90	/^  type solid$/;"	t	module:gems_type
solid_melting	gems_source.f90	/^   subroutine solid_melting(/;"	s	module:gems_source
solid_prop	gems_input.f90	/^      namelist \/solid_prop\//;"	n	subroutine:solid_property
solid_property	gems_input.f90	/^   subroutine solid_property$/;"	s	module:gems_input
solution	gems_input.f90	/^      namelist \/solution\//;"	n	subroutine:solution_information
solution_information	gems_input.f90	/^   subroutine solution_information$/;"	s	module:gems_input
sort	gems_library.f90	/^   subroutine sort(/;"	s	module:gems_library
sort_string	gems_reaction.f90	/^   function sort_string(/;"	f	module:gems_react
sound_speed	gems_state.f90	/^   function sound_speed(/;"	f
source	gems_source.f90	/^   subroutine source(/;"	s	module:gems_source
source_vector	gems_source.f90	/^   function source_vector(/;"	f	module:gems_source
special_bc_conditions	gems_bound.f90	/^   subroutine special_bc_conditions(/;"	s	module:gems_bound
species	gems_data.f90	/^   type(therm) :: species(/;"	v	module:gems_data
spline	gems_library.f90	/^   subroutine spline(/;"	s	module:gems_library
sqrt2	gems_constant.f90	/^   real(rfp), parameter :: sqrt2 /;"	v	module:gems_constant
sqrt3	gems_constant.f90	/^   real(rfp), parameter :: sqrt3 /;"	v	module:gems_constant
srf	gems_type.f90	/^    real(kind = rfp) :: srf,/;"	k	type:cell
srfm	gems_type.f90	/^    real(kind = rfp) :: srf, srfm,/;"	k	type:cell
ssp	gems_type.f90	/^    real(rfp) :: cpp(7, 3), hhp(8, 3), ssp(/;"	k	type:therm
stagnation_pressure	gems_state.f90	/^   function stagnation_pressure(/;"	f
stagnation_temperature	gems_state.f90	/^   function stagnation_temperature(/;"	f
stephan_boltzmann	gems_data.f90	/^   real(rfp) :: stephan_boltzmann /;"	v	module:gems_data
steps	gems_type.f90	/^    integer, pointer :: steps(/;"	k	type:job
sum_qv_node	gems_disc.f90	/^   function sum_qv_node(/;"	f	module:gems_disc
svd	gems_type.f90	/^    real(kind = rfp), pointer :: svd(/;"	k	type:cell
svdcmp_inv	gems_library.f90	/^   SUBROUTINE svdcmp_inv(/;"	s	module:gems_library
swirl_outlet	gems_bound.f90	/^   subroutine swirl_outlet(/;"	s	module:gems_bound
swirl_outlet1	gems_bound.f90	/^   subroutine swirl_outlet1(/;"	s	module:gems_bound
symmetry	gems_bound.f90	/^   subroutine symmetry(/;"	s	module:gems_bound
symmetry_jacob	gems_bound.f90	/^   subroutine symmetry_jacob(/;"	s
t	gems_state.f90	/^      real(rfp) :: fp, ft,/;"	v
t0	gems_type.f90	/^    real(rfp) :: p0, t0,/;"	k	type:gas
t_alpha	gems_data.f90	/^   real(kind = rfp) :: t_alpha /;"	v	module:gems_data
t_beta0	gems_data.f90	/^   real(kind = rfp) :: t_beta0 /;"	v	module:gems_data
t_betas0	gems_data.f90	/^   real(kind = rfp) :: t_betas0 /;"	v	module:gems_data
t_betas3	gems_data.f90	/^   real(kind = rfp) :: t_betas3 /;"	v	module:gems_data
t_cdes	gems_data.f90	/^   real(kind = rfp) :: t_cdes /;"	v	module:gems_data
t_keinf	gems_data.f90	/^   real(kind = rfp) :: t_keinf,/;"	v	module:gems_data
t_omegainf	gems_data.f90	/^   real(kind = rfp) :: t_keinf, t_omegainf,/;"	v	module:gems_data
t_psi	gems_data.f90	/^   real(kind = rfp) :: t_psi /;"	v	module:gems_data
t_psido	gems_data.f90	/^   real(kind = rfp) :: t_psido /;"	v	module:gems_data
t_psis	gems_data.f90	/^   real(kind = rfp) :: t_psis /;"	v	module:gems_data
t_sr	gems_data.f90	/^   real(kind = rfp) :: t_keinf, t_omegainf, t_sr$/;"	v	module:gems_data
tb	gems_main.f90	/^   real(rfp) :: cpu_time(6), tcpu(6), tb /;"	v	program:gems_main
tcpu	gems_main.f90	/^   real(rfp) :: cpu_time(6), tcpu(/;"	v	program:gems_main
tensor	gems_library.f90	/^   function tensor(/;"	f	module:gems_library
tfromrhop	gems_state.f90	/^   function tfromrhop(/;"	f
therm	gems_type.f90	/^  type therm$/;"	t	module:gems_type
thickness_bl	gems_output.f90	/^   subroutine thickness_bl(/;"	s	module:gems_output
third_body	gems_type.f90	/^    logical :: third_body,/;"	k	type:react
three	gems_constant.f90	/^   real(rfp), parameter    :: three /;"	v	module:gems_constant
three_second	gems_constant.f90	/^   real(rfp), parameter    :: three_second /;"	v	module:gems_constant
timera	gems_library.f90	/^   subroutine timera(/;"	s	module:gems_library
tinv_inter_prop	gems_state.f90	/^   function tinv_inter_prop(/;"	f
tiny	gems_rptbdb.f90	/^   real(rfp), parameter :: tiny /;"	v	module:RPTBDB_constant
tl	gems_type.f90	/^    real(rfp) :: rhol, rhos, ts, tl$/;"	k	type:solid
tn	gems_type.f90	/^    type(node), pointer :: tn$/;"	k	type:bnode
to_cell	gems_type.f90	/^    type(cell), pointer :: to_cell /;"	k	type:neighbour_cell
to_face	gems_type.f90	/^    type(face), pointer :: to_face /;"	k	type:neighbour
tri_cell_vertices	gems_rptbdb.f90	/^   integer :: tri_cell_vertices(/;"	v	module:RPTBDB_constant
tri_cells	gems_rptbdb.f90	/^      type(p2TriCell), pointer :: tri_cells(/;"	k	type:FttCell
try_new_limiter	gems_disc.f90	/^   subroutine try_new_limiter(/;"	s	module:gems_disc
ts	gems_type.f90	/^    real(rfp) :: rhol, rhos, ts,/;"	k	type:solid
turb	gems_input.f90	/^      namelist \/turb\//;"	n	subroutine:turbulence_model_paramter
turb_baldwin_lomax	gems_turb.f90	/^   subroutine turb_baldwin_lomax(/;"	s	module:gems_turb
turb_model_1998	gems_turb.f90	/^   subroutine turb_model_1998(/;"	s	module:gems_turb
turb_model_2006	gems_turb.f90	/^   subroutine turb_model_2006(/;"	s	module:gems_turb
turb_wall_function	gems_bound.f90	/^   subroutine turb_wall_function(/;"	s	module:gems_bound
turbulence_model_paramter	gems_input.f90	/^   subroutine turbulence_model_paramter$/;"	s	module:gems_input
two	gems_constant.f90	/^   real(rfp), parameter    :: two /;"	v	module:gems_constant
two_sqrt2	gems_constant.f90	/^   real(rfp), parameter    :: two_sqrt2 /;"	v	module:gems_constant
two_third	gems_constant.f90	/^   real(rfp), parameter    :: two_third /;"	v	module:gems_constant
umax	gems_type.f90	/^    real(rfp) :: utawonu, ymax, fmax, umax$/;"	k	type:wallface
unsteady	gems_input.f90	/^      namelist \/unsteady\//;"	n	subroutine:unsteady_parameter
unsteady_parameter	gems_input.f90	/^   subroutine unsteady_parameter$/;"	s	module:gems_input
up_chain	gems_type.f90	/^    type(chain), pointer :: up_chain,/;"	k	type:chain
upcase	gems_reaction.f90	/^   function upcase(/;"	f	module:gems_react
update_boundary	gems_bound.f90	/^   subroutine update_boundary(/;"	s
update_cells	gems_main.f90	/^   subroutine update_cells(/;"	s	program:gems_main
update_geom_interface	gems_bound.f90	/^   subroutine update_geom_interface(/;"	s
update_geom_pinterface	gems_bound.f90	/^   subroutine update_geom_pinterface(/;"	s
update_gradient	gems_bound.f90	/^   subroutine update_gradient(/;"	s
update_interface	gems_bound.f90	/^   subroutine update_interface(/;"	s
update_interface_dqv	gems_bound.f90	/^   subroutine update_interface_dqv(/;"	s
update_pinterface	gems_bound.f90	/^   subroutine update_pinterface(/;"	s
update_unsteady_data	gems_main.f90	/^   subroutine update_unsteady_data(/;"	s	program:gems_main
upstring	gems_reaction.f90	/^   subroutine upstring(/;"	s	module:gems_react
user_define_output	gems_output.f90	/^   subroutine user_define_output(/;"	s	module:gems_output
user_defined_init	gems_input.f90	/^   subroutine user_defined_init(/;"	s	module:gems_input
utawonu	gems_type.f90	/^    real(rfp) :: utawonu,/;"	k	type:wallface
v	gems_type.f90	/^    real(kind = rfp), dimension(neq) :: v$/;"	k	type:vector
var_nam	gems_rptbdb.f90	/^      character(len = 17), pointer :: var_nam(/;"	k	type:FttRootCell
vars	gems_rptbdb.f90	/^      real(rfp) :: vars(/;"	k	type:Qvar
vars	gems_rptbdb.f90	/^   type vars$/;"	t	module:RPTBDB_constant
vars	gems_type.f90	/^    real(rfp), pointer :: vars(/;"	k	type:bc_type
vc	gems_data.f90	/^   type(bc_type), pointer :: bc(:), vc(/;"	v	module:gems_data
vec2mat	gems_library.f90	/^   function vec2mat(/;"	f	module:gems_library
vecn	gems_type.f90	/^    real(kind = rfp) :: vecn(/;"	k	type:face
vecn	gems_type.f90	/^    real(kind = rfp) :: vecn(/;"	k	type:wallface
vecn	gems_type.f90	/^    real(rfp), pointer :: vecn(/;"	k	type:itf
vector	gems_type.f90	/^  type vector$/;"	t	module:gems_type
vector_add_vector	gems_library.f90	/^   function vector_add_vector(/;"	f	module:gems_library
vector_by_array	gems_library.f90	/^   function vector_by_array(/;"	f	module:gems_library
vector_by_scale	gems_library.f90	/^   function vector_by_scale(/;"	f	module:gems_library
vector_min_vector	gems_library.f90	/^   function vector_min_vector(/;"	f	module:gems_library
vector_product	gems_library.f90	/^   function vector_product(/;"	f	module:gems_library
vectors_add_vectors	gems_library.f90	/^   function vectors_add_vectors(/;"	f	module:gems_library
vectors_by_scale	gems_library.f90	/^   function vectors_by_scale(/;"	f	module:gems_library
vectors_by_vectors	gems_library.f90	/^   function vectors_by_vectors(/;"	f	module:gems_library
vectors_min_vectors	gems_library.f90	/^   function vectors_min_vectors(/;"	f	module:gems_library
vis_add	gems_source.f90	/^   subroutine vis_add(/;"	s	module:gems_source
vis_spectrum	gems_fv.f90	/^   subroutine vis_spectrum(/;"	s	module:gems_fv
vis_t	gems_fv.f90	/^   function vis_t(/;"	f	module:gems_fv
vis_tc	gems_fv.f90	/^   function vis_tc(/;"	f	module:gems_fv
viscous	gems_fv.f90	/^   subroutine viscous(/;"	s	module:gems_fv
viscous_correction	gems_bound.f90	/^   function viscous_correction(/;"	f	module:gems_bound
vl	gems_type.f90	/^    real(kind = rfp) :: centp(ndim), vl,/;"	k	type:face
vname	gems_data.f90	/^   character(len = 40) :: vname(/;"	v	module:gems_data
vol	gems_type.f90	/^    real(kind = rfp) :: vol /;"	k	type:cell
volume2d	gems_library.f90	/^   function volume2d(/;"	f	module:gems_library
volume3d	gems_library.f90	/^   function volume3d(/;"	f	module:gems_library
volume_con	gems_input.f90	/^      namelist \/volume_con\//;"	n	subroutine:read_volume_conditions
volume_fraction	gems_state.f90	/^   function volume_fraction(/;"	f
vr	gems_type.f90	/^    real(kind = rfp) :: centp(ndim), vl, vr /;"	k	type:face
vt	gems_type.f90	/^    real(rfp) :: vt(/;"	k	type:therm
vtheta	gems_bound.f90	/^   function vtheta(/;"	f	module:gems_bound
wall	gems_input.f90	/^      namelist \/wall\//;"	n	subroutine:read_wall
wall_boundary	gems_bound.f90	/^   subroutine wall_boundary(/;"	s	module:gems_bound
wall_jacob	gems_bound.f90	/^   subroutine wall_jacob(/;"	s
wall_plot	gems_output.f90	/^   subroutine wall_plot(/;"	s	module:gems_output
wall_type	gems_constant.f90	/^   integer, parameter :: wall_type /;"	v	module:gems_constant
wallbc	gems_data.f90	/^   type(wallbl), pointer :: wallbc(/;"	v	module:gems_data
wallbl	gems_type.f90	/^  type wallbl$/;"	t	module:gems_type
wallface	gems_type.f90	/^  type wallface$/;"	t	module:gems_type
weight	gems_type.f90	/^    real(kind = rfp), pointer :: weight(/;"	k	type:cell
weighted_average	gems_disc.f90	/^   subroutine weighted_average(/;"	s	module:gems_disc
wlabel	gems_data.f90	/^   integer, pointer :: wlabel(/;"	v	module:gems_data
wname	gems_data.f90	/^   character(len = 40) :: vname(100), wname(/;"	v	module:gems_data
woutput_option	gems_input.f90	/^   subroutine woutput_option(/;"	s	module:gems_input
woutput_selection	gems_data.f90	/^   logical, pointer :: woutput_selection(/;"	v	module:gems_data
woutput_vars	gems_input.f90	/^      namelist \/woutput_vars\//;"	n	subroutine:woutput_option
write_reaction_rate	gems_reaction.f90	/^   function write_reaction_rate(/;"	f	module:gems_react
x	gems_rptbdb.f90	/^      real(rfp), pointer :: x(/;"	k	type:SplineSeg
xy2rq	gems_bound.f90	/^   subroutine xy2rq(/;"	s
xyz	gems_rptbdb.f90	/^      real(rfp) :: xyz(/;"	k	type:FttVector
xyz	gems_type.f90	/^    real(kind = rfp) :: xyz(/;"	k	type:node
y	gems_rptbdb.f90	/^      real(rfp), pointer :: x(:), y(/;"	k	type:SplineSeg
yif	gems_state.f90	/^   function yif(/;"	f
ymax	gems_type.f90	/^    real(rfp) :: utawonu, ymax,/;"	k	type:wallface
zero	gems_constant.f90	/^   real(rfp), parameter    :: zero /;"	v	module:gems_constant
zero	gems_rptbdb.f90	/^   real(rfp), parameter :: one = 1.0_rfp, zero /;"	v	module:RPTBDB_constant
zmut	gems_type.f90	/^    real(rfp), pointer :: zmut /;"	k	type:cell
zmut_bl	gems_data.f90	/^   real(rfp), pointer :: zmut_bl(/;"	v	module:gems_data
